var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.327,1,2.105]],["body/modules/AppModule.html",[0,2.123,1,4.058,2,1.693,3,1.693,4,2.04,5,2.04,6,1.693,7,2.704,8,2.04,9,2.924,10,2.924,11,3.453,12,0.031,13,3.453,14,3.453,15,2.704,16,2.04,17,2.04,18,0.367,19,0.322,20,0.322,21,3.496,22,3.375,23,0.897,24,0.88,25,3.496,26,3.496,27,3.496,28,1.553,29,0.367,30,0.051,31,0.022,32,0.022]],["title/classes/AtualizarDto.html",[30,0.047,33,2.105]],["body/classes/AtualizarDto.html",[12,0.031,18,0.354,19,0.311,20,0.311,23,0.547,29,0.536,30,0.065,31,0.021,32,0.021,33,2.931,34,1.378,35,2.185,36,0.354,37,1.45,38,3.534,39,3.307,40,0.604,41,1.142,42,2.19,43,3.372,44,3.295,45,1.968,46,0.806,47,3.372,48,3.534,49,3.372,50,2.457,51,1.968,52,3.295,53,1.45,54,2.009,55,2.19,56,2.19,57,2.19,58,0.781,59,2.457,60,3.372,61,2.457,62,3.372]],["title/classes/CadastroDto.html",[30,0.047,63,1.573]],["body/classes/CadastroDto.html",[12,0.03,18,0.393,19,0.345,20,0.345,23,0.606,29,0.393,30,0.07,31,0.023,32,0.023,34,1.528,36,0.393,37,1.552,40,0.635,41,1.175,42,2.6,46,0.957,48,3.905,51,2.183,53,1.722,63,2.345,64,3.127,65,2.6,66,2.847,67,3.739,68,3.739,69,3.739,70,3.739,71,4.049]],["title/classes/CadastroDto-1.html",[30,0.039,63,1.319,72,2.278]],["body/classes/CadastroDto-1.html",[12,0.031,18,0.303,19,0.266,20,0.266,23,0.468,29,0.494,30,0.059,31,0.019,32,0.019,34,1.179,36,0.303,37,1.303,40,0.661,41,1.142,42,2.606,44,2.96,45,1.684,46,0.959,48,3.617,50,2.102,51,1.684,53,1.508,54,2.267,55,2.277,56,2.277,57,2.277,58,0.668,61,2.102,63,1.967,73,1.869,74,2.885,75,2.885,76,2.885,77,2.885,78,4.063,79,2.885,80,2.885,81,2.632,82,2.885,83,2.885,84,2.885,85,4.063,86,4.063,87,4.063,88,2.885,89,2.96,90,2.96,91,2.96,92,2.96,93,2.96,94,2.102,95,2.885,96,2.885,97,2.885,98,2.885,99,2.885]],["title/classes/Cliente.html",[30,0.047,100,1.443]],["body/classes/Cliente.html",[12,0.031,18,0.317,19,0.278,20,0.278,29,0.317,30,0.044,31,0.02,32,0.02,34,1.232,36,0.317,37,1.344,40,0.647,41,1.234,45,1.761,46,0.974,53,1.754,58,0.699,65,2.742,66,2.9,72,2.523,100,2.14,101,2.523,102,1.055,103,3.544,104,4.192,105,2.333,106,4.192,107,3.017,108,3.017,109,3.017,110,3.017,111,3.017,112,1.145,113,1.145,114,1.145,115,1.055,116,4.192,117,3.017,118,3.017,119,3.017,120,2.523,121,1.145,122,4.192,123,3.017,124,3.017,125,3.017,126,3.017,127,3.017]],["title/injectables/ClientePostgresRepository.html",[128,0.818,129,2.105]],["body/injectables/ClientePostgresRepository.html",[12,0.031,18,0.267,19,0.234,20,0.234,23,0.781,24,0.64,29,0.267,30,0.037,31,0.018,32,0.018,36,0.267,40,0.57,41,1.126,46,0.858,58,1.015,65,2.333,66,2.554,100,2.607,102,0.934,105,1.231,112,1.316,113,1.316,114,1.316,115,1.103,121,1.197,128,0.934,129,2.405,130,1.129,131,4.285,132,1.852,133,2.359,134,2.704,135,3.711,136,3.711,137,1.797,138,1.852,139,1.814,140,2.543,141,2.704,142,3.711,143,2.543,144,3.104,145,1.858,146,3.711,147,2.543,148,3.711,149,2.543,150,2.127,151,2.166,152,2.543,153,1.348,154,1.231,155,1.79,156,2.543,157,2.543,158,2.543]],["title/controllers/ClientesController.html",[159,1.573,160,2.105]],["body/controllers/ClientesController.html",[12,0.031,18,0.302,19,0.265,20,0.265,23,0.826,24,0.724,28,1.277,29,0.302,30,0.042,31,0.019,32,0.019,36,0.302,40,0.48,41,0.915,42,1.963,46,0.722,53,1.299,58,0.939,63,2.469,65,2.273,66,2.149,100,2.387,102,1.02,112,1.107,113,1.107,114,1.107,115,1.02,121,1.107,133,2.278,145,1.77,155,1.656,159,1.392,160,2.626,161,2.404,162,2.094,163,2.875,164,4.053,165,4.053,166,2.875,167,4.053,168,2.875,169,2.875,170,3.42,171,2.875,172,2.094,173,2.094,174,2.094,175,2.404,176,2.094,177,2.489,178,2.875,179,2.404,180,2.875,181,2.094,182,2.875,183,2.875,184,2.875,185,2.875,186,2.875,187,2.094,188,1.392,189,2.404,190,2.404,191,2.404]],["title/modules/ClientesModule.html",[0,1.327,11,1.896]],["body/modules/ClientesModule.html",[0,2.069,2,1.608,3,1.608,4,1.938,5,1.938,6,1.608,7,2.955,8,1.938,11,3.536,12,0.031,15,2.612,16,1.938,17,1.938,18,0.349,19,0.306,20,0.306,22,2.419,23,0.945,24,0.836,28,1.988,29,0.349,30,0.048,31,0.021,32,0.021,129,2.9,139,2.194,151,2.612,153,1.76,160,3.281,177,3.09,192,2.777,193,2.777,194,3.32,195,3.32,196,2.777,197,3.32,198,3.32,199,3.32,200,2.419,201,2.419]],["title/injectables/ClientesService.html",[128,0.818,177,1.722]],["body/injectables/ClientesService.html",[12,0.031,18,0.27,19,0.237,20,0.237,23,0.785,24,0.648,29,0.27,30,0.037,31,0.018,32,0.018,36,0.27,40,0.522,41,1.175,46,0.786,53,1.554,58,1.122,65,2.137,66,2.848,100,1.143,102,0.942,105,1.246,112,1.205,113,1.205,114,1.205,115,0.942,121,1.022,128,0.942,130,1.143,133,2.195,134,2.727,137,1.813,144,2.152,145,1.683,151,2.828,154,1.246,155,1.803,173,1.875,174,1.875,177,1.985,187,2.727,188,1.813,202,2.152,203,3.131,204,2.573,205,2.573,206,3.744,207,3.131,208,2.573,209,3.131,210,2.573,211,1.875,212,2.152,213,2.426,214,2.573,215,2.573,216,2.573,217,2.573,218,2.573,219,2.573,220,2.573,221,2.573,222,2.573,223,2.573,224,2.573,225,2.573,226,3.744,227,2.573,228,2.573,229,2.573,230,2.573,231,3.744,232,2.573,233,2.573]],["title/classes/CriarPedidoDto.html",[30,0.047,234,2.105]],["body/classes/CriarPedidoDto.html",[12,0.031,18,0.338,19,0.297,20,0.297,23,0.522,29,0.523,30,0.063,31,0.021,32,0.021,34,1.316,36,0.338,37,1.406,40,0.633,41,1.126,42,2.414,44,3.194,45,1.88,46,0.888,48,3.743,50,2.346,51,1.88,58,0.746,61,2.346,71,2.693,234,2.841,235,3.468,236,2.087,237,2.643,238,2.91,239,2.837,240,3.22,241,3.22,242,3.22,243,3.22,244,3.194,245,3.194,246,3.194,247,3.194,248,3.194,249,3.194,250,2.346,251,3.22,252,3.22]],["title/interfaces/IClientesService.html",[213,2.105,253,1.896]],["body/interfaces/IClientesService.html",[12,0.03,18,0.379,19,0.333,20,0.333,23,0.586,29,0.379,31,0.022,32,0.022,36,0.379,40,0.56,41,1.245,46,0.843,53,1.693,65,2.293,66,2.8,100,1.605,102,1.192,112,1.293,113,1.293,114,1.293,115,1.192,134,3.45,145,1.947,203,3.96,207,3.96,209,3.96,212,3.022,213,3.068,253,2.109,254,2.632,255,3.022,256,3.614,257,3.614]],["title/interfaces/IPedidosService.html",[253,1.896,258,2.105]],["body/interfaces/IPedidosService.html",[12,0.031,18,0.42,19,0.369,20,0.369,23,0.649,29,0.42,31,0.024,32,0.024,36,0.42,37,1.621,40,0.598,41,1.081,145,1.756,237,2.121,238,2.335,239,2.121,253,2.335,254,2.915,258,3.276,259,3.346,260,4.242,261,3.774,262,4.242,263,1.938,264,3.346]],["title/classes/Pedido.html",[30,0.047,263,1.573]],["body/classes/Pedido.html",[12,0.03,18,0.361,19,0.317,20,0.317,29,0.361,30,0.05,31,0.022,32,0.022,34,1.405,36,0.361,37,1.47,40,0.61,41,1.218,46,0.918,58,0.797,102,1.154,103,3.34,112,0.939,113,0.939,114,1.408,115,0.866,121,0.939,188,1.666,237,3.187,239,3.035,263,2.773,265,2.877,266,4.583,267,3.44,268,3.44,269,4.583,270,3.44,271,2.506,272,4.583,273,3.44,274,3.44,275,3.44]],["title/controllers/PedidosController.html",[159,1.573,276,2.105]],["body/controllers/PedidosController.html",[12,0.031,18,0.325,19,0.285,20,0.285,23,0.853,24,0.778,28,1.374,29,0.325,30,0.045,31,0.02,32,0.02,36,0.325,40,0.366,42,2.065,46,0.76,58,0.988,102,1.073,112,0.844,113,0.844,114,0.844,115,1.073,121,1.164,133,2.331,145,1.827,155,1.742,159,1.498,162,2.253,170,3.556,172,2.253,181,2.253,234,3.409,237,2.261,238,1.805,239,2.261,261,3.409,263,2.364,276,2.763,277,2.586,278,3.556,279,2.763,280,2.586,281,3.093,282,3.093,283,2.588,284,3.093,285,3.093,286,3.093,287,2.586,288,3.093,289,2.586,290,3.093,291,3.093]],["title/classes/PedidosItems.html",[30,0.047,292,2.366]],["body/classes/PedidosItems.html",[12,0.03,18,0.358,19,0.315,20,0.315,29,0.358,30,0.049,31,0.022,32,0.022,34,1.394,36,0.358,37,1.462,40,0.608,41,1.216,46,0.915,58,0.791,102,1.147,103,3.327,112,0.932,113,0.932,114,0.932,115,0.859,121,0.932,188,1.653,292,4.16,293,4.583,294,2.854,295,5.017,296,4.913,297,5.134,298,3.412,299,3.412,300,3.412,301,3.412,302,4.559,303,3.412,304,3.412]],["title/modules/PedidosModule.html",[0,1.327,13,1.896]],["body/modules/PedidosModule.html",[0,2.077,2,1.62,3,1.62,4,1.953,5,1.953,6,1.62,7,2.967,8,1.953,12,0.031,13,3.542,15,2.626,16,1.953,17,1.953,18,0.351,19,0.308,20,0.308,23,0.947,24,0.842,28,1.999,29,0.351,30,0.048,31,0.021,32,0.021,139,2.199,153,1.774,200,2.437,201,2.437,276,3.294,283,3.097,305,2.798,306,2.798,307,3.346,308,3.346,309,2.626,310,3.346,311,2.915,312,3.346,313,3.346,314,3.346]],["title/injectables/PedidosService.html",[128,0.818,283,1.722]],["body/injectables/PedidosService.html",[12,0.031,18,0.308,19,0.27,20,0.27,23,0.834,24,0.738,29,0.308,30,0.042,31,0.02,32,0.02,36,0.308,40,0.487,41,1.165,46,0.845,58,0.952,102,1.035,105,1.421,112,1.123,113,1.123,114,1.123,115,1.035,121,1.123,128,1.035,130,1.303,133,2.293,137,1.991,145,1.786,154,1.421,155,1.68,211,2.137,237,2.727,238,1.713,239,2.727,258,2.664,260,2.995,261,3.333,263,2.298,264,2.454,271,2.137,278,2.995,283,2.18,309,3.002,315,2.454,316,2.934,317,2.934,318,4.111,319,3.438,320,2.934,321,2.934,322,2.934,323,2.934,324,2.934,325,2.934,326,2.934]],["title/injectables/PeditosPostgres.html",[128,0.818,311,2.105]],["body/injectables/PeditosPostgres.html",[12,0.031,18,0.269,19,0.236,20,0.236,23,0.784,24,0.646,29,0.269,30,0.037,31,0.018,32,0.018,36,0.269,40,0.442,41,1.129,46,0.785,58,1.121,65,1.809,102,0.94,105,1.243,112,1.02,113,1.02,114,1.02,115,0.94,121,1.02,128,0.94,130,1.14,133,2.193,137,1.809,138,1.869,139,1.822,141,2.721,145,1.681,153,1.36,154,1.243,155,1.526,237,2.726,238,1.497,239,2.565,260,2.721,261,3.135,263,2.133,271,1.869,278,2.721,287,2.146,295,2.146,296,2.146,309,2.18,311,2.42,319,3.124,327,4.046,328,2.146,329,1.869,330,3.735,331,3.735,332,3.735,333,3.735,334,3.735,335,3.735,336,2.566,337,2.566,338,2.566,339,2.566,340,2.566,341,2.566,342,2.566,343,2.566,344,2.566,345,2.566,346,2.566,347,2.566,348,2.566,349,2.566]],["title/injectables/PrismaService.html",[128,0.818,139,1.223]],["body/injectables/PrismaService.html",[12,0.031,18,0.357,19,0.313,20,0.313,23,0.737,24,0.855,29,0.357,30,0.049,31,0.022,32,0.022,36,0.357,37,1.458,40,0.402,46,0.975,102,1.144,115,1.144,121,1.242,128,1.144,130,1.51,137,2.481,139,1.712,154,1.646,176,2.476,350,2.843,351,4.547,352,5.703,353,5.124,354,5.124,355,5.868,356,5.868,357,4.547,358,3.399,359,3.399,360,3.399,361,3.399,362,3.399,363,3.399,364,3.399,365,3.399]],["title/classes/Produto.html",[30,0.047,366,1.722]],["body/classes/Produto.html",[12,0.03,18,0.301,19,0.264,20,0.264,29,0.301,30,0.041,31,0.019,32,0.019,34,1.171,36,0.301,37,1.296,40,0.659,41,1.252,46,0.992,53,1.721,54,2.543,55,2.772,56,2.772,57,2.772,58,0.664,81,3.478,102,1.018,103,3.036,112,0.782,113,0.782,114,0.782,115,0.721,121,0.782,188,1.388,366,2.845,367,2.396,368,4.043,369,2.865,370,2.865,371,2.865,372,2.865,373,2.865,374,4.043,375,2.865,376,2.946,377,2.865,378,2.865,379,2.865,380,2.865,381,2.865]],["title/injectables/ProdutoPostresRepository.html",[128,0.818,382,2.105]],["body/injectables/ProdutoPostresRepository.html",[12,0.031,18,0.223,19,0.196,20,0.196,23,0.77,24,0.535,29,0.223,30,0.031,31,0.015,32,0.015,36,0.223,38,2.857,39,2.857,40,0.562,41,1.191,46,0.846,54,1.443,58,1.1,81,2.553,100,0.945,102,0.817,105,1.03,112,1.297,113,1.297,114,1.297,115,1.11,121,1.204,128,0.817,130,0.945,132,1.549,133,2.366,137,1.573,138,1.549,139,1.66,141,2.366,145,1.865,150,1.779,153,1.128,154,1.03,155,1.802,279,2.104,366,2.338,376,2.366,382,2.104,383,3.647,384,2.366,385,2.366,386,2.366,387,2.127,388,2.366,389,2.127,390,3.248,391,2.127,392,2.366,393,2.127,394,3.212,395,2.366,396,2.127,397,1.779,398,1.896,399,1.779,400,5.007,401,2.127,402,3.248,403,2.127,404,2.127,405,2.127,406,2.366,407,2.127]],["title/controllers/ProdutosController.html",[159,1.573,408,2.105]],["body/controllers/ProdutosController.html",[12,0.031,18,0.225,19,0.198,20,0.198,23,0.773,24,0.539,28,0.952,29,0.225,30,0.031,31,0.016,32,0.016,33,2.868,36,0.225,38,1.388,39,2.116,40,0.524,41,1.075,42,2.144,45,1.251,46,0.789,53,0.687,54,1.966,55,1.582,56,1.582,57,1.582,58,1.025,63,2.144,102,0.822,112,1.209,113,1.209,114,1.209,115,1.114,121,1.209,133,2.37,145,1.87,155,1.809,159,1.038,162,1.561,170,2.883,172,2.379,173,1.561,174,1.561,175,1.792,179,1.792,181,1.561,187,2.379,188,1.582,189,2.732,190,2.732,191,2.732,279,2.116,280,1.792,289,1.792,366,2.768,384,2.379,385,2.379,386,2.379,388,1.561,392,1.561,394,3.225,395,1.561,397,1.792,406,2.883,408,2.116,409,1.792,410,3.266,411,2.143,412,2.143,413,3.266,414,2.143,415,3.266,416,2.143,417,2.143,418,2.143,419,2.098,420,1.792,421,2.143,422,2.143,423,2.143,424,2.143,425,2.143,426,3.266,427,2.143,428,2.143,429,2.143,430,2.143]],["title/modules/ProdutosModule.html",[0,1.327,14,1.896]],["body/modules/ProdutosModule.html",[0,2.069,2,1.608,3,1.608,4,1.938,5,1.938,6,1.608,7,2.955,8,1.938,12,0.031,14,3.536,15,2.612,16,1.938,17,1.938,18,0.349,19,0.306,20,0.306,22,2.419,23,0.945,24,0.836,28,1.988,29,0.349,30,0.048,31,0.021,32,0.021,139,2.194,153,1.76,196,2.777,200,2.419,201,2.419,382,2.9,383,2.419,398,2.612,399,2.777,408,3.281,419,3.09,420,2.777,431,2.777,432,2.777,433,3.32,434,3.32]],["title/injectables/ProdutosService.html",[128,0.818,419,1.722]],["body/injectables/ProdutosService.html",[12,0.031,18,0.222,19,0.195,20,0.195,23,0.712,24,0.531,29,0.222,30,0.031,31,0.015,32,0.015,36,0.222,38,2.846,39,2.846,40,0.56,41,1.245,46,0.843,53,0.677,54,2.103,55,2.127,56,2.127,57,2.127,58,1.097,81,3.235,102,0.813,105,1.022,112,1.293,113,1.293,114,1.293,115,1.106,121,1.199,128,0.813,130,0.938,133,2.362,137,1.564,145,1.861,154,1.022,155,1.795,211,1.538,279,2.093,366,1.119,376,1.538,384,2.353,385,2.353,386,2.353,388,2.353,392,2.353,394,2.353,395,2.353,398,2.564,406,2.353,419,1.712,435,1.766,436,2.111,437,2.111,438,3.229,439,2.111,440,3.229,441,2.111,442,2.111,443,2.111,444,2.111,445,2.111,446,2.353,447,2.111,448,2.111,449,2.111,450,3.229,451,2.111,452,3.229,453,2.111,454,3.229,455,2.111,456,2.111]],["title/coverage.html",[457,3.213]],["body/coverage.html",[6,1.134,12,0.031,20,0.216,30,0.08,31,0.017,32,0.017,33,1.517,35,2.263,40,0.277,59,1.706,63,1.691,64,1.958,73,2.263,94,1.706,100,1.04,101,1.958,120,5.383,128,1.354,129,1.517,131,1.958,132,2.544,139,0.882,151,1.367,159,2.023,160,1.517,161,1.958,177,1.241,188,1.134,202,1.958,213,1.517,234,1.517,235,2.263,236,2.263,250,1.706,253,2.038,255,1.958,258,1.517,259,1.958,262,3.042,263,1.134,265,1.958,276,1.517,277,1.958,283,1.241,292,1.706,293,1.958,294,1.958,309,1.367,311,1.517,315,1.958,327,1.958,328,1.958,350,1.958,366,1.241,367,1.958,382,1.517,383,1.706,398,1.367,408,1.517,409,1.958,419,1.241,435,1.958,446,1.706,457,1.706,458,2.342,459,2.342,460,2.342,461,4.176,462,4.952,463,5.193,464,4.63,465,1.958,466,5.53,467,5.754,468,1.958,469,2.342,470,2.342,471,1.958,472,2.342,473,1.958,474,1.958,475,2.544,476,2.544,477,1.958,478,1.958,479,2.342,480,2.342]],["title/dependencies.html",[3,1.889,481,2.278]],["body/dependencies.html",[3,1.956,12,0.031,24,1.017,30,0.074,31,0.024,32,0.024,51,2.357,176,2.942,482,5.843,483,4.039,484,4.039,485,4.039,486,4.039,487,4.039,488,4.039,489,4.039,490,4.039,491,4.039,492,4.039,493,4.039,494,4.039,495,4.039,496,4.039,497,4.039,498,4.039,499,4.039,500,4.039,501,4.039,502,4.039,503,4.039]],["title/miscellaneous/functions.html",[504,1.444,505,3.262]],["body/miscellaneous/functions.html",[6,2.857,12,0.026,31,0.026,32,0.026,36,0.483,262,4.297,468,3.849,475,3.352,476,4.014,477,4.933,504,2.44,505,3.849,506,4.602,507,3.849]],["title/index.html",[36,0.286,508,2.724,509,2.724]],["body/index.html",[12,0.03,19,0.3,31,0.021,32,0.021,329,2.373,457,2.373,510,3.257,511,3.257,512,4.418,513,3.257,514,3.257,515,3.257,516,3.257,517,3.257,518,3.257,519,5.014,520,3.257,521,3.257,522,3.257,523,3.257,524,5.014,525,5.928,526,3.257,527,3.257,528,3.257,529,5.796,530,3.257,531,3.257,532,4.418,533,3.257,534,3.257,535,3.257,536,3.257,537,4.418,538,4.418,539,3.257,540,3.257,541,3.257,542,4.418,543,4.418,544,3.257,545,3.257,546,3.257,547,3.257,548,3.257,549,2.724,550,3.257,551,3.257,552,3.257,553,3.257,554,3.257,555,3.257,556,3.257,557,3.257,558,3.257,559,3.257,560,2.724,561,3.257,562,3.257,563,3.257,564,3.257,565,3.257,566,3.257,567,2.724]],["title/modules.html",[2,2.136]],["body/modules.html",[1,2.935,2,2.193,11,2.643,12,0.026,13,2.643,14,2.643,31,0.026,32,0.026,549,5.086,568,6.081,569,6.081,570,6.081]],["title/overview.html",[571,3.688]],["body/overview.html",[0,1.4,1,3.953,2,1.659,3,1.659,4,2,5,2,6,1.659,7,2,8,2,9,2.865,10,2.865,11,3.505,12,0.03,13,3.505,14,3.505,15,2.668,16,2,17,2,28,1.522,31,0.022,32,0.022,34,1.4,130,1.522,139,2.153,177,2.727,192,2.865,193,2.865,254,2.496,283,2.727,305,2.865,306,2.865,419,2.727,431,2.865,432,2.865,571,2.865,572,3.426,573,3.426,574,3.426,575,3.426,576,3.426]],["title/properties.html",[37,1.251,481,2.278]],["body/properties.html",[12,0.03,31,0.027,32,0.027,37,1.533,329,3.483,560,3.999,567,3.999,577,4.781,578,4.781,579,4.781]],["title/miscellaneous/typealiases.html",[504,1.444,580,3.901]],["body/miscellaneous/typealiases.html",[12,0.031,31,0.024,32,0.024,35,2.642,36,0.428,40,0.483,52,3.727,53,1.307,54,1.811,55,1.975,56,1.975,57,1.975,73,2.642,89,3.727,90,2.97,91,2.97,92,2.97,93,2.97,235,2.642,236,3.315,244,3.727,245,2.97,246,2.97,247,2.97,248,2.97,249,2.97,504,2.161,581,4.077,582,3.41,583,3.41,584,3.41]],["title/miscellaneous/variables.html",[504,1.444,585,3.262]],["body/miscellaneous/variables.html",[12,0.031,31,0.02,32,0.02,35,2.026,36,0.328,40,0.626,52,2.278,53,1.002,54,1.389,55,1.514,56,1.514,57,1.514,59,3.13,73,2.026,89,2.278,90,2.278,91,2.278,92,2.278,93,2.278,94,3.13,151,2.508,235,2.026,236,2.784,244,2.278,245,2.278,246,2.278,247,2.278,248,2.278,249,2.278,250,3.13,309,2.508,398,2.508,446,3.13,465,2.615,471,2.615,473,2.615,474,2.615,475,2.278,476,3.13,478,3.593,504,1.657,507,2.615,582,2.615,583,2.615,584,2.615,585,2.615,586,3.126,587,3.126,588,3.126,589,3.126,590,5.973,591,5.973,592,3.126,593,3.126,594,3.126,595,3.126,596,3.126,597,3.126,598,3.126,599,3.126,600,3.126]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"classes/Cliente.html":{},"coverage.html":{}}}],["0.0.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["0.0.1",{"_index":578,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":72,"title":{"classes/CadastroDto-1.html":{}},"body":{"classes/Cliente.html":{}}}],["1*$/.test(cpf",{"_index":124,"title":{},"body":{"classes/Cliente.html":{}}}],["1/4",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":127,"title":{},"body":{"classes/Cliente.html":{}}}],["2",{"_index":576,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":573,"title":{},"body":{"overview.html":{}}}],["30s",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":572,"title":{},"body":{"overview.html":{}}}],["5.4.2",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":574,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":575,"title":{},"body":{"overview.html":{}}}],["8.11.3",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["9]/g",{"_index":219,"title":{},"body":{"injectables/ClientesService.html":{}}}],["acompanhanmento",{"_index":91,"title":{},"body":{"classes/CadastroDto-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["adapters/driven/cliente",{"_index":195,"title":{},"body":{"modules/ClientesModule.html":{}}}],["adapters/driven/pedido",{"_index":312,"title":{},"body":{"modules/PedidosModule.html":{}}}],["adapters/driving/cliente.controller",{"_index":197,"title":{},"body":{"modules/ClientesModule.html":{}}}],["adapters/driving/pedidos.controller",{"_index":308,"title":{},"body":{"modules/PedidosModule.html":{}}}],["aliases",{"_index":581,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allonenumber",{"_index":123,"title":{},"body":{"classes/Cliente.html":{}}}],["already",{"_index":224,"title":{},"body":{"injectables/ClientesService.html":{}}}],["amazing",{"_index":550,"title":{},"body":{"index.html":{}}}],["app",{"_index":527,"title":{},"body":{"index.html":{}}}],["applications",{"_index":518,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arrayminsize",{"_index":84,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["arrayminsize(0",{"_index":98,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["async",{"_index":133,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["atualizardto",{"_index":33,"title":{"classes/AtualizarDto.html":{}},"body":{"classes/AtualizarDto.html":{},"controllers/ProdutosController.html":{},"coverage.html":{}}}],["author",{"_index":560,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":155,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["backers",{"_index":551,"title":{},"body":{"index.html":{}}}],["bebida",{"_index":92,"title":{},"body":{"classes/CadastroDto-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":172,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["boolean",{"_index":118,"title":{},"body":{"classes/Cliente.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":570,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":568,"title":{},"body":{"modules.html":{}}}],["building",{"_index":513,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":384,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["buscar(@param('categoria",{"_index":429,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["buscar(categoria",{"_index":388,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["cadastrar",{"_index":279,"title":{},"body":{"controllers/PedidosController.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["cadastrar(@body",{"_index":289,"title":{},"body":{"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["cadastrar(nome",{"_index":440,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["cadastrar(novoproduto",{"_index":390,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["cadastrar(undefined",{"_index":280,"title":{},"body":{"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["cadastrarcliente",{"_index":134,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{}}}],["cadastrarcliente(cpf",{"_index":207,"title":{},"body":{"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{}}}],["cadastrarcliente(novocliente",{"_index":142,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["cadastrodto",{"_index":63,"title":{"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{}},"body":{"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"controllers/ClientesController.html":{},"controllers/ProdutosController.html":{},"coverage.html":{}}}],["campo",{"_index":38,"title":{},"body":{"classes/AtualizarDto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["categoria",{"_index":54,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":30,"title":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"classes/CriarPedidoDto.html":{},"classes/Pedido.html":{},"classes/PedidosItems.html":{},"classes/Produto.html":{}},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":34,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"classes/CriarPedidoDto.html":{},"classes/Pedido.html":{},"classes/PedidosItems.html":{},"classes/Produto.html":{},"overview.html":{}}}],["client",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cliente",{"_index":100,"title":{"classes/Cliente.html":{}},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"injectables/ProdutoPostresRepository.html":{},"coverage.html":{}}}],["cliente.criarcliente(cpfonlynumbers",{"_index":227,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientecadastrado",{"_index":231,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientecpf",{"_index":237,"title":{},"body":{"classes/CriarPedidoDto.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["clienteid",{"_index":342,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["clientepostgresrepository",{"_index":129,"title":{"injectables/ClientePostgresRepository.html":{}},"body":{"injectables/ClientePostgresRepository.html":{},"modules/ClientesModule.html":{},"coverage.html":{}}}],["clienterepository",{"_index":206,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientes",{"_index":163,"title":{},"body":{"controllers/ClientesController.html":{}}}],["clientes/clientes.module",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["clientescontroller",{"_index":160,"title":{"controllers/ClientesController.html":{}},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"coverage.html":{}}}],["clientesmodule",{"_index":11,"title":{"modules/ClientesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules.html":{},"overview.html":{}}}],["clientesservice",{"_index":177,"title":{"injectables/ClientesService.html":{}},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_clientesmodule",{"_index":192,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_clientesmodule_providers",{"_index":193,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_pedidosmodule",{"_index":305,"title":{},"body":{"modules/PedidosModule.html":{},"overview.html":{}}}],["cluster_pedidosmodule_providers",{"_index":306,"title":{},"body":{"modules/PedidosModule.html":{},"overview.html":{}}}],["cluster_produtosmodule",{"_index":431,"title":{},"body":{"modules/ProdutosModule.html":{},"overview.html":{}}}],["cluster_produtosmodule_providers",{"_index":432,"title":{},"body":{"modules/ProdutosModule.html":{},"overview.html":{}}}],["const",{"_index":58,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{}}}],["constructor(clienterepository",{"_index":204,"title":{},"body":{"injectables/ClientesService.html":{}}}],["constructor(pedidorepository",{"_index":316,"title":{},"body":{"injectables/PedidosService.html":{}}}],["constructor(prismarepository",{"_index":138,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{}}}],["constructor(private",{"_index":181,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["constructor(produtorepository",{"_index":436,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["controller",{"_index":159,"title":{"controllers/ClientesController.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}},"body":{"controllers/ClientesController.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{},"coverage.html":{}}}],["controller('clientes",{"_index":180,"title":{},"body":{"controllers/ClientesController.html":{}}}],["controller('pedidos",{"_index":288,"title":{},"body":{"controllers/PedidosController.html":{}}}],["controller('produtos",{"_index":422,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["controllers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"controllers/PedidosController.html":{},"modules/PedidosModule.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["coverage",{"_index":457,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":65,"title":{},"body":{"classes/CadastroDto.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"injectables/PeditosPostgres.html":{}}}],["cpf.length",{"_index":126,"title":{},"body":{"classes/Cliente.html":{}}}],["cpf.replace(/[^0",{"_index":218,"title":{},"body":{"injectables/ClientesService.html":{}}}],["cpfonlynumbers",{"_index":217,"title":{},"body":{"injectables/ClientesService.html":{}}}],["criapedido",{"_index":266,"title":{},"body":{"classes/Pedido.html":{}}}],["criapedido(status",{"_index":269,"title":{},"body":{"classes/Pedido.html":{}}}],["criapedidositens",{"_index":297,"title":{},"body":{"classes/PedidosItems.html":{}}}],["criapedidositens(produtoid",{"_index":300,"title":{},"body":{"classes/PedidosItems.html":{}}}],["criar",{"_index":260,"title":{},"body":{"interfaces/IPedidosService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["criar(produtosids",{"_index":319,"title":{},"body":{"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["criarcliente",{"_index":104,"title":{},"body":{"classes/Cliente.html":{}}}],["criarcliente(cpf",{"_index":110,"title":{},"body":{"classes/Cliente.html":{}}}],["criarpedidodto",{"_index":234,"title":{"classes/CriarPedidoDto.html":{}},"body":{"classes/CriarPedidoDto.html":{},"controllers/PedidosController.html":{},"coverage.html":{}}}],["criarproduto",{"_index":368,"title":{},"body":{"classes/Produto.html":{}}}],["criarproduto(nome",{"_index":374,"title":{},"body":{"classes/Produto.html":{}}}],["data",{"_index":404,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"controllers/ClientesController.html":{},"classes/CriarPedidoDto.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["default",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["delete",{"_index":417,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["delete(':id",{"_index":415,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descricao",{"_index":56,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":329,"title":{},"body":{"injectables/PeditosPostgres.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":528,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["domain/inboundports/cliente.service",{"_index":198,"title":{},"body":{"modules/ClientesModule.html":{}}}],["domain/inboundports/pedidos.service",{"_index":314,"title":{},"body":{"modules/PedidosModule.html":{}}}],["domain/outboundports/icliente.repository",{"_index":199,"title":{},"body":{"modules/ClientesModule.html":{}}}],["domain/outboundports/ipedido.repository",{"_index":310,"title":{},"body":{"modules/PedidosModule.html":{}}}],["dtos/atualizar.dto",{"_index":421,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["dtos/cadastro.dto",{"_index":179,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/ProdutosController.html":{}}}],["dtos/criar",{"_index":285,"title":{},"body":{"controllers/PedidosController.html":{}}}],["duration",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":539,"title":{},"body":{"index.html":{}}}],["each",{"_index":99,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["editar",{"_index":385,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["editar(@param('id",{"_index":427,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["editar(id",{"_index":392,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["efficient",{"_index":514,"title":{},"body":{"index.html":{}}}],["em",{"_index":246,"title":{},"body":{"classes/CriarPedidoDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":66,"title":{},"body":{"classes/CadastroDto.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{}}}],["entities/cliente.entity",{"_index":212,"title":{},"body":{"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{}}}],["entities/pedido.entity",{"_index":264,"title":{},"body":{"interfaces/IPedidosService.html":{},"injectables/PedidosService.html":{}}}],["entities/produto.entity",{"_index":444,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["enumcategoriatipo",{"_index":94,"title":{},"body":{"classes/CadastroDto-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumcategoriatipo.join",{"_index":96,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["enumstatustipo",{"_index":250,"title":{},"body":{"classes/CriarPedidoDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumstatustipo.join",{"_index":252,"title":{},"body":{"classes/CriarPedidoDto.html":{}}}],["enumtipocampo",{"_index":59,"title":{},"body":{"classes/AtualizarDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enumtipocampo.join",{"_index":62,"title":{},"body":{"classes/AtualizarDto.html":{}}}],["error",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{}}}],["example",{"_index":524,"title":{},"body":{"index.html":{}}}],["exists",{"_index":220,"title":{},"body":{"injectables/ClientesService.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["express",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{}}}],["false",{"_index":122,"title":{},"body":{"classes/Cliente.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{}}}],["finalizado",{"_index":249,"title":{},"body":{"classes/CriarPedidoDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":190,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/ProdutosController.html":{}}}],["framework",{"_index":512,"title":{},"body":{"index.html":{}}}],["function",{"_index":262,"title":{},"body":{"interfaces/IPedidosService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":505,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':categoria",{"_index":410,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["get(':cpf",{"_index":167,"title":{},"body":{"controllers/ClientesController.html":{}}}],["getting",{"_index":508,"title":{"index.html":{}},"body":{}}],["grow",{"_index":546,"title":{},"body":{"index.html":{}}}],["here",{"_index":557,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":173,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/ProdutosController.html":{}}}],["httpexception('cpf",{"_index":229,"title":{},"body":{"injectables/ClientesService.html":{}}}],["httpexception('email",{"_index":223,"title":{},"body":{"injectables/ClientesService.html":{}}}],["httpexception('not",{"_index":189,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/ProdutosController.html":{}}}],["https://nestjs.com",{"_index":564,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":174,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/ProdutosController.html":{}}}],["httpstatus.bad_request",{"_index":226,"title":{},"body":{"injectables/ClientesService.html":{}}}],["httpstatus.not_found",{"_index":191,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/ProdutosController.html":{}}}],["icliente.service",{"_index":214,"title":{},"body":{"injectables/ClientesService.html":{}}}],["iclienterepository",{"_index":151,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iclientesservice",{"_index":213,"title":{"interfaces/IClientesService.html":{}},"body":{"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"coverage.html":{}}}],["id",{"_index":394,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["identificar",{"_index":164,"title":{},"body":{"controllers/ClientesController.html":{}}}],["identificar(@param('cpf",{"_index":184,"title":{},"body":{"controllers/ClientesController.html":{}}}],["identificar(cpf",{"_index":166,"title":{},"body":{"controllers/ClientesController.html":{}}}],["identificarcliente",{"_index":203,"title":{},"body":{"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{}}}],["identificarcliente(cpf",{"_index":209,"title":{},"body":{"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{}}}],["identifier",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["if(!cliente",{"_index":186,"title":{},"body":{"controllers/ClientesController.html":{}}}],["if(!novocliente",{"_index":228,"title":{},"body":{"injectables/ClientesService.html":{}}}],["if(!produto",{"_index":426,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["if(allonenumber",{"_index":125,"title":{},"body":{"classes/Cliente.html":{}}}],["if(clientecpf",{"_index":274,"title":{},"body":{"classes/Pedido.html":{}}}],["if(exists.length",{"_index":222,"title":{},"body":{"injectables/ClientesService.html":{}}}],["imagens",{"_index":57,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":330,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["implements",{"_index":154,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"controllers/PedidosController.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/ProdutosModule.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{}}}],["inject",{"_index":211,"title":{},"body":{"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/ProdutosService.html":{}}}],["inject(iclienterepository",{"_index":216,"title":{},"body":{"injectables/ClientesService.html":{}}}],["inject(ipedidosrepository",{"_index":324,"title":{},"body":{"injectables/PedidosService.html":{}}}],["inject(iprodutorepository",{"_index":448,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["injectable",{"_index":128,"title":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{}},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{},"coverage.html":{}}}],["injectables",{"_index":130,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{},"overview.html":{}}}],["installation",{"_index":523,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":526,"title":{},"body":{"index.html":{}}}],["interface",{"_index":253,"title":{"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{}},"body":{"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"coverage.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"overview.html":{}}}],["ipedidos.service",{"_index":322,"title":{},"body":{"injectables/PedidosService.html":{}}}],["ipedidosrepository",{"_index":309,"title":{},"body":{"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipedidosservice",{"_index":258,"title":{"interfaces/IPedidosService.html":{}},"body":{"interfaces/IPedidosService.html":{},"injectables/PedidosService.html":{},"coverage.html":{}}}],["iproduto.service",{"_index":447,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["iprodutorepository",{"_index":398,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iprodutosservice",{"_index":446,"title":{},"body":{"injectables/ProdutosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":85,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["isarray()@arrayminsize(0)@isstring({each",{"_index":77,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["isemail",{"_index":71,"title":{},"body":{"classes/CadastroDto.html":{},"classes/CriarPedidoDto.html":{}}}],["isenum",{"_index":50,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/CriarPedidoDto.html":{}}}],["isenum(enumcategoriatipo",{"_index":95,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["isenum(enumstatustipo",{"_index":251,"title":{},"body":{"classes/CriarPedidoDto.html":{}}}],["isenum(enumtipocampo",{"_index":60,"title":{},"body":{"classes/AtualizarDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/CriarPedidoDto.html":{}}}],["isnotempty()@isemail",{"_index":68,"title":{},"body":{"classes/CadastroDto.html":{}}}],["isnotempty()@isenum(enumcategoriatipo",{"_index":74,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["isnotempty()@isenum(enumstatustipo",{"_index":242,"title":{},"body":{"classes/CriarPedidoDto.html":{}}}],["isnotempty()@isenum(enumtipocampo",{"_index":43,"title":{},"body":{"classes/AtualizarDto.html":{}}}],["isnumber",{"_index":86,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["isnumber()@min(0.01",{"_index":82,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["isstring",{"_index":87,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["items.entity.ts",{"_index":294,"title":{},"body":{"classes/PedidosItems.html":{},"coverage.html":{}}}],["items.entity.ts:2",{"_index":299,"title":{},"body":{"classes/PedidosItems.html":{}}}],["items.entity.ts:3",{"_index":298,"title":{},"body":{"classes/PedidosItems.html":{}}}],["items.entity.ts:5",{"_index":301,"title":{},"body":{"classes/PedidosItems.html":{}}}],["join",{"_index":553,"title":{},"body":{"index.html":{}}}],["k6",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["k6.ts",{"_index":476,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["kamil",{"_index":561,"title":{},"body":{"index.html":{}}}],["lanche",{"_index":90,"title":{},"body":{"classes/CadastroDto-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["license",{"_index":567,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":543,"title":{},"body":{"index.html":{}}}],["listar",{"_index":261,"title":{},"body":{"interfaces/IPedidosService.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["log",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":335,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["message",{"_index":44,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/CriarPedidoDto.html":{}}}],["metadata",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":102,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["min",{"_index":88,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["min(0.01",{"_index":97,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["miscellaneous",{"_index":504,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":542,"title":{},"body":{"index.html":{}}}],["mode",{"_index":532,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":556,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":562,"title":{},"body":{"index.html":{}}}],["name",{"_index":113,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["nest",{"_index":519,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":566,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"controllers/PedidosController.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":188,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/Pedido.html":{},"classes/PedidosItems.html":{},"classes/Produto.html":{},"controllers/ProdutosController.html":{},"coverage.html":{}}}],["node.js",{"_index":511,"title":{},"body":{"index.html":{}}}],["nome",{"_index":53,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"classes/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["novocliente",{"_index":144,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{}}}],["novopedido",{"_index":272,"title":{},"body":{"classes/Pedido.html":{}}}],["novopedido.clientecpf",{"_index":275,"title":{},"body":{"classes/Pedido.html":{}}}],["novopedido.status",{"_index":273,"title":{},"body":{"classes/Pedido.html":{}}}],["novopedidoitem",{"_index":302,"title":{},"body":{"classes/PedidosItems.html":{}}}],["novopedidoitem.pedidoid",{"_index":304,"title":{},"body":{"classes/PedidosItems.html":{}}}],["novopedidoitem.produtoid",{"_index":303,"title":{},"body":{"classes/PedidosItems.html":{}}}],["novoproduto",{"_index":376,"title":{},"body":{"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{}}}],["novoproduto.categoria",{"_index":378,"title":{},"body":{"classes/Produto.html":{}}}],["novoproduto.descricao",{"_index":380,"title":{},"body":{"classes/Produto.html":{}}}],["novoproduto.imagens",{"_index":381,"title":{},"body":{"classes/Produto.html":{}}}],["novoproduto.nome",{"_index":377,"title":{},"body":{"classes/Produto.html":{}}}],["novoproduto.preco",{"_index":379,"title":{},"body":{"classes/Produto.html":{}}}],["null",{"_index":340,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["number",{"_index":81,"title":{},"body":{"classes/CadastroDto-1.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{}}}],["object",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":61,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/CriarPedidoDto.html":{}}}],["onmoduledestroy",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":544,"title":{},"body":{"index.html":{}}}],["optional",{"_index":114,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["options",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["outboundports/icliente.repository",{"_index":215,"title":{},"body":{"injectables/ClientesService.html":{}}}],["outboundports/ipedido.repository",{"_index":323,"title":{},"body":{"injectables/PedidosService.html":{}}}],["outboundports/iproduto.repository",{"_index":445,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["output",{"_index":331,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["overview",{"_index":571,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":481,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":175,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/ProdutosController.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["pedido",{"_index":263,"title":{"classes/Pedido.html":{}},"body":{"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"coverage.html":{}}}],["pedido.dto",{"_index":286,"title":{},"body":{"controllers/PedidosController.html":{}}}],["pedido.dto.ts",{"_index":236,"title":{},"body":{"classes/CriarPedidoDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pedido.dto.ts:14",{"_index":241,"title":{},"body":{"classes/CriarPedidoDto.html":{}}}],["pedido.dto.ts:20",{"_index":243,"title":{},"body":{"classes/CriarPedidoDto.html":{}}}],["pedido.dto.ts:23",{"_index":240,"title":{},"body":{"classes/CriarPedidoDto.html":{}}}],["pedido.id",{"_index":346,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["pedidoid",{"_index":295,"title":{},"body":{"classes/PedidosItems.html":{},"injectables/PeditosPostgres.html":{}}}],["pedidorepository",{"_index":318,"title":{},"body":{"injectables/PedidosService.html":{}}}],["pedidos",{"_index":278,"title":{},"body":{"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["pedidos/pedidos.module",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["pedidoscontroller",{"_index":276,"title":{"controllers/PedidosController.html":{}},"body":{"controllers/PedidosController.html":{},"modules/PedidosModule.html":{},"coverage.html":{}}}],["pedidositems",{"_index":292,"title":{"classes/PedidosItems.html":{}},"body":{"classes/PedidosItems.html":{},"coverage.html":{}}}],["pedidositenspromise",{"_index":343,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["pedidosmodule",{"_index":13,"title":{"modules/PedidosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PedidosModule.html":{},"modules.html":{},"overview.html":{}}}],["pedidosservice",{"_index":283,"title":{"injectables/PedidosService.html":{}},"body":{"controllers/PedidosController.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"coverage.html":{},"overview.html":{}}}],["peditospostgres",{"_index":311,"title":{"injectables/PeditosPostgres.html":{}},"body":{"modules/PedidosModule.html":{},"injectables/PeditosPostgres.html":{},"coverage.html":{}}}],["pegaclienteporcpf",{"_index":135,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["pegaclienteporcpf(cpf",{"_index":146,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["pg",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["pid",{"_index":347,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["please",{"_index":554,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":525,"title":{},"body":{"index.html":{}}}],["port",{"_index":332,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["posgres.repository",{"_index":313,"title":{},"body":{"modules/PedidosModule.html":{}}}],["posgres.repository.ts",{"_index":328,"title":{},"body":{"injectables/PeditosPostgres.html":{},"coverage.html":{}}}],["posgres.repository.ts:10",{"_index":336,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["posgres.repository.ts:16",{"_index":337,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["posgres.repository.ts:29",{"_index":338,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["post",{"_index":170,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["postgres.repository",{"_index":196,"title":{},"body":{"modules/ClientesModule.html":{},"modules/ProdutosModule.html":{}}}],["postgres.repository.ts",{"_index":132,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ProdutoPostresRepository.html":{},"coverage.html":{}}}],["postgres.repository.ts:13",{"_index":143,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["postgres.repository.ts:14",{"_index":391,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["postgres.repository.ts:18",{"_index":147,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["postgres.repository.ts:19",{"_index":393,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["postgres.repository.ts:23",{"_index":149,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["postgres.repository.ts:30",{"_index":396,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["postgres.repository.ts:38",{"_index":389,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["postgres.repository.ts:7",{"_index":140,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["postgres.repository.ts:8",{"_index":387,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["preco",{"_index":55,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":162,"title":{},"body":{"controllers/ClientesController.html":{},"controllers/PedidosController.html":{},"controllers/ProdutosController.html":{}}}],["preparacao",{"_index":247,"title":{},"body":{"classes/CriarPedidoDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":176,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismarepository",{"_index":141,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{}}}],["prismaservice",{"_index":139,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/ClientePostgresRepository.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"injectables/ProdutoPostresRepository.html":{},"modules/ProdutosModule.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":105,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"injectables/ClientesService.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{},"injectables/ProdutosService.html":{}}}],["production",{"_index":534,"title":{},"body":{"index.html":{}}}],["produto",{"_index":366,"title":{"classes/Produto.html":{}},"body":{"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"coverage.html":{}}}],["produto.criarproduto(nome",{"_index":449,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtoatt",{"_index":452,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtocadastrado",{"_index":450,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtocriado",{"_index":400,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["produtoid",{"_index":296,"title":{},"body":{"classes/PedidosItems.html":{},"injectables/PeditosPostgres.html":{}}}],["produtopostresrepository",{"_index":382,"title":{"injectables/ProdutoPostresRepository.html":{}},"body":{"injectables/ProdutoPostresRepository.html":{},"modules/ProdutosModule.html":{},"coverage.html":{}}}],["produtoremovido",{"_index":454,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtorepository",{"_index":438,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtos",{"_index":406,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["produtos/produtos.module",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["produtoscontroller",{"_index":408,"title":{"controllers/ProdutosController.html":{}},"body":{"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"coverage.html":{}}}],["produtosids",{"_index":238,"title":{},"body":{"classes/CriarPedidoDto.html":{},"interfaces/IPedidosService.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["produtosids.map(pid",{"_index":344,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["produtosmodule",{"_index":14,"title":{"modules/ProdutosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProdutosModule.html":{},"modules.html":{},"overview.html":{}}}],["produtosservice",{"_index":419,"title":{"injectables/ProdutosService.html":{}},"body":{"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":510,"title":{},"body":{"index.html":{}}}],["project",{"_index":545,"title":{},"body":{"index.html":{}}}],["promise",{"_index":145,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["promise.all(pedidositenspromise",{"_index":348,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["pronto",{"_index":248,"title":{},"body":{"classes/CriarPedidoDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":37,"title":{"properties.html":{}},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"classes/PedidosItems.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"properties.html":{}}}],["provide",{"_index":200,"title":{},"body":{"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["public",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["put",{"_index":418,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["put(':id",{"_index":413,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["read",{"_index":555,"title":{},"body":{"index.html":{}}}],["recebido",{"_index":245,"title":{},"body":{"classes/CriarPedidoDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":225,"title":{},"body":{"injectables/ClientesService.html":{}}}],["registrar",{"_index":165,"title":{},"body":{"controllers/ClientesController.html":{}}}],["registrar(@body",{"_index":182,"title":{},"body":{"controllers/ClientesController.html":{}}}],["registrar(undefined",{"_index":169,"title":{},"body":{"controllers/ClientesController.html":{}}}],["remover",{"_index":386,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["remover(@param('id",{"_index":424,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["remover(id",{"_index":395,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["repository",{"_index":522,"title":{},"body":{"index.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":121,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["returns",{"_index":115,"title":{},"body":{"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"interfaces/IClientesService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["run",{"_index":529,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":515,"title":{},"body":{"index.html":{}}}],["server",{"_index":516,"title":{},"body":{"index.html":{}}}],["side",{"_index":517,"title":{},"body":{"index.html":{}}}],["sobremesa",{"_index":93,"title":{},"body":{"classes/CadastroDto-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["soma",{"_index":119,"title":{},"body":{"classes/Cliente.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"modules/PedidosModule.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"index.html":{}}}],["sponsors",{"_index":548,"title":{},"body":{"index.html":{}}}],["src/.../atualizar.dto.ts",{"_index":582,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../cadastro.dto.ts",{"_index":583,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../criar",{"_index":584,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../icliente.repository.ts",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ipedido.repository.ts",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iproduto.repository.ts",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../iproduto.service.ts",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":21,"title":{},"body":{"modules/AppModule.html":{}}}],["src/clientes/adapters/driven/cliente",{"_index":131,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"coverage.html":{}}}],["src/clientes/adapters/driving/cliente.controller.ts",{"_index":161,"title":{},"body":{"controllers/ClientesController.html":{},"coverage.html":{}}}],["src/clientes/adapters/driving/cliente.controller.ts:11",{"_index":171,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/adapters/driving/cliente.controller.ts:17",{"_index":168,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/adapters/driving/dtos/cadastro.dto.ts",{"_index":64,"title":{},"body":{"classes/CadastroDto.html":{},"coverage.html":{}}}],["src/clientes/adapters/driving/dtos/cadastro.dto.ts:12",{"_index":69,"title":{},"body":{"classes/CadastroDto.html":{}}}],["src/clientes/adapters/driving/dtos/cadastro.dto.ts:5",{"_index":67,"title":{},"body":{"classes/CadastroDto.html":{}}}],["src/clientes/adapters/driving/dtos/cadastro.dto.ts:8",{"_index":70,"title":{},"body":{"classes/CadastroDto.html":{}}}],["src/clientes/clientes.module.ts",{"_index":194,"title":{},"body":{"modules/ClientesModule.html":{}}}],["src/clientes/domain/entities/cliente.entity",{"_index":150,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"injectables/ProdutoPostresRepository.html":{}}}],["src/clientes/domain/entities/cliente.entity.ts",{"_index":101,"title":{},"body":{"classes/Cliente.html":{},"coverage.html":{}}}],["src/clientes/domain/entities/cliente.entity.ts:2",{"_index":107,"title":{},"body":{"classes/Cliente.html":{}}}],["src/clientes/domain/entities/cliente.entity.ts:3",{"_index":109,"title":{},"body":{"classes/Cliente.html":{}}}],["src/clientes/domain/entities/cliente.entity.ts:4",{"_index":108,"title":{},"body":{"classes/Cliente.html":{}}}],["src/clientes/domain/entities/cliente.entity.ts:45",{"_index":111,"title":{},"body":{"classes/Cliente.html":{}}}],["src/clientes/domain/entities/cliente.entity.ts:6",{"_index":117,"title":{},"body":{"classes/Cliente.html":{}}}],["src/clientes/domain/inboundports/cliente.service",{"_index":178,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/domain/inboundports/cliente.service.ts",{"_index":202,"title":{},"body":{"injectables/ClientesService.html":{},"coverage.html":{}}}],["src/clientes/domain/inboundports/cliente.service.ts:13",{"_index":208,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/domain/inboundports/cliente.service.ts:31",{"_index":210,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/domain/inboundports/cliente.service.ts:7",{"_index":205,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/domain/inboundports/icliente.service.ts",{"_index":255,"title":{},"body":{"interfaces/IClientesService.html":{},"coverage.html":{}}}],["src/clientes/domain/inboundports/icliente.service.ts:4",{"_index":256,"title":{},"body":{"interfaces/IClientesService.html":{}}}],["src/clientes/domain/inboundports/icliente.service.ts:5",{"_index":257,"title":{},"body":{"interfaces/IClientesService.html":{}}}],["src/clientes/domain/outboundports/icliente.repository",{"_index":152,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["src/clientes/domain/outboundports/icliente.repository.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pedidos/adapters/driven/pedido",{"_index":327,"title":{},"body":{"injectables/PeditosPostgres.html":{},"coverage.html":{}}}],["src/pedidos/adapters/driving/dtos/criar",{"_index":235,"title":{},"body":{"classes/CriarPedidoDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/pedidos/adapters/driving/pedidos.controller.ts",{"_index":277,"title":{},"body":{"controllers/PedidosController.html":{},"coverage.html":{}}}],["src/pedidos/adapters/driving/pedidos.controller.ts:11",{"_index":281,"title":{},"body":{"controllers/PedidosController.html":{}}}],["src/pedidos/adapters/driving/pedidos.controller.ts:17",{"_index":282,"title":{},"body":{"controllers/PedidosController.html":{}}}],["src/pedidos/domain/entities/pedido.entity",{"_index":287,"title":{},"body":{"controllers/PedidosController.html":{},"injectables/PeditosPostgres.html":{}}}],["src/pedidos/domain/entities/pedido.entity.ts",{"_index":265,"title":{},"body":{"classes/Pedido.html":{},"coverage.html":{}}}],["src/pedidos/domain/entities/pedido.entity.ts:3",{"_index":268,"title":{},"body":{"classes/Pedido.html":{}}}],["src/pedidos/domain/entities/pedido.entity.ts:4",{"_index":267,"title":{},"body":{"classes/Pedido.html":{}}}],["src/pedidos/domain/entities/pedido.entity.ts:6",{"_index":270,"title":{},"body":{"classes/Pedido.html":{}}}],["src/pedidos/domain/entities/pedidos",{"_index":293,"title":{},"body":{"classes/PedidosItems.html":{},"coverage.html":{}}}],["src/pedidos/domain/inboundports/ipedidos.service.ts",{"_index":259,"title":{},"body":{"interfaces/IPedidosService.html":{},"coverage.html":{}}}],["src/pedidos/domain/inboundports/pedidos.service",{"_index":284,"title":{},"body":{"controllers/PedidosController.html":{}}}],["src/pedidos/domain/inboundports/pedidos.service.ts",{"_index":315,"title":{},"body":{"injectables/PedidosService.html":{},"coverage.html":{}}}],["src/pedidos/domain/inboundports/pedidos.service.ts:13",{"_index":320,"title":{},"body":{"injectables/PedidosService.html":{}}}],["src/pedidos/domain/inboundports/pedidos.service.ts:18",{"_index":321,"title":{},"body":{"injectables/PedidosService.html":{}}}],["src/pedidos/domain/inboundports/pedidos.service.ts:7",{"_index":317,"title":{},"body":{"injectables/PedidosService.html":{}}}],["src/pedidos/domain/outboundports/ipedido.repository",{"_index":339,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["src/pedidos/domain/outboundports/ipedido.repository.ts",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/pedidos/pedidos.module.ts",{"_index":307,"title":{},"body":{"modules/PedidosModule.html":{}}}],["src/prisma/prisma.service",{"_index":153,"title":{},"body":{"injectables/ClientePostgresRepository.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"injectables/PeditosPostgres.html":{},"injectables/ProdutoPostresRepository.html":{},"modules/ProdutosModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":350,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:17",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:21",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/produtos/adapters/driven/produto",{"_index":383,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"modules/ProdutosModule.html":{},"coverage.html":{}}}],["src/produtos/adapters/driving/dtos/atualizar.dto.ts",{"_index":35,"title":{},"body":{"classes/AtualizarDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/produtos/adapters/driving/dtos/atualizar.dto.ts:18",{"_index":47,"title":{},"body":{"classes/AtualizarDto.html":{}}}],["src/produtos/adapters/driving/dtos/atualizar.dto.ts:21",{"_index":49,"title":{},"body":{"classes/AtualizarDto.html":{}}}],["src/produtos/adapters/driving/dtos/cadastro.dto.ts",{"_index":73,"title":{},"body":{"classes/CadastroDto-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/produtos/adapters/driving/dtos/cadastro.dto.ts:14",{"_index":80,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["src/produtos/adapters/driving/dtos/cadastro.dto.ts:20",{"_index":75,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["src/produtos/adapters/driving/dtos/cadastro.dto.ts:24",{"_index":83,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["src/produtos/adapters/driving/dtos/cadastro.dto.ts:27",{"_index":76,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["src/produtos/adapters/driving/dtos/cadastro.dto.ts:32",{"_index":79,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["src/produtos/adapters/driving/pedito.controller",{"_index":434,"title":{},"body":{"modules/ProdutosModule.html":{}}}],["src/produtos/adapters/driving/pedito.controller.ts",{"_index":409,"title":{},"body":{"controllers/ProdutosController.html":{},"coverage.html":{}}}],["src/produtos/adapters/driving/pedito.controller.ts:12",{"_index":412,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/adapters/driving/pedito.controller.ts:18",{"_index":416,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/adapters/driving/pedito.controller.ts:27",{"_index":414,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/adapters/driving/pedito.controller.ts:36",{"_index":411,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/domain/entities/produto.entity",{"_index":397,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{}}}],["src/produtos/domain/entities/produto.entity.ts",{"_index":367,"title":{},"body":{"classes/Produto.html":{},"coverage.html":{}}}],["src/produtos/domain/entities/produto.entity.ts:2",{"_index":372,"title":{},"body":{"classes/Produto.html":{}}}],["src/produtos/domain/entities/produto.entity.ts:3",{"_index":369,"title":{},"body":{"classes/Produto.html":{}}}],["src/produtos/domain/entities/produto.entity.ts:4",{"_index":373,"title":{},"body":{"classes/Produto.html":{}}}],["src/produtos/domain/entities/produto.entity.ts:5",{"_index":370,"title":{},"body":{"classes/Produto.html":{}}}],["src/produtos/domain/entities/produto.entity.ts:6",{"_index":371,"title":{},"body":{"classes/Produto.html":{}}}],["src/produtos/domain/entities/produto.entity.ts:8",{"_index":375,"title":{},"body":{"classes/Produto.html":{}}}],["src/produtos/domain/inboundports/iproduto.service.ts",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtos/domain/inboundports/produto.service",{"_index":420,"title":{},"body":{"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{}}}],["src/produtos/domain/inboundports/produto.service.ts",{"_index":435,"title":{},"body":{"injectables/ProdutosService.html":{},"coverage.html":{}}}],["src/produtos/domain/inboundports/produto.service.ts:13",{"_index":441,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/domain/inboundports/produto.service.ts:19",{"_index":442,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/domain/inboundports/produto.service.ts:23",{"_index":443,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/domain/inboundports/produto.service.ts:27",{"_index":439,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/domain/inboundports/produto.service.ts:7",{"_index":437,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/domain/outboundports/iproduto.repository",{"_index":399,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{},"modules/ProdutosModule.html":{}}}],["src/produtos/domain/outboundports/iproduto.repository.ts",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtos/produtos.module.ts",{"_index":433,"title":{},"body":{"modules/ProdutosModule.html":{}}}],["start",{"_index":530,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":533,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":535,"title":{},"body":{"index.html":{}}}],["started",{"_index":509,"title":{"index.html":{}},"body":{}}],["starter",{"_index":521,"title":{},"body":{"index.html":{}}}],["statements",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":103,"title":{},"body":{"classes/Cliente.html":{},"classes/Pedido.html":{},"classes/PedidosItems.html":{},"classes/Produto.html":{}}}],["status",{"_index":239,"title":{},"body":{"classes/CriarPedidoDto.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["stay",{"_index":558,"title":{},"body":{"index.html":{}}}],["store",{"_index":333,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["super",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":549,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":569,"title":{},"body":{"modules.html":{}}}],["symbol('iclienterepository",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('ipedidosrepository",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('iprodutorepository",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol('iprodutosservice",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":538,"title":{},"body":{"index.html":{}}}],["test/.../stress",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["test/stress/stress",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":541,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":540,"title":{},"body":{"index.html":{}}}],["tests",{"_index":537,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":547,"title":{},"body":{"index.html":{}}}],["things",{"_index":334,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["this.$connect",{"_index":364,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":365,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.clienterepository.cadastrarcliente(novocliente",{"_index":232,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienterepository.pegaclienteporcpf(cpf",{"_index":233,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clienterepository.validaclienteexistente(cpfonlynumbers",{"_index":221,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clientesservice.cadastrarcliente(cpf",{"_index":183,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.identificarcliente(cpf",{"_index":185,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.pedidorepository.criar(produtosids",{"_index":325,"title":{},"body":{"injectables/PedidosService.html":{}}}],["this.pedidorepository.listar",{"_index":326,"title":{},"body":{"injectables/PedidosService.html":{}}}],["this.pedidosservice.criar(produtosids",{"_index":290,"title":{},"body":{"controllers/PedidosController.html":{}}}],["this.pedidosservice.listar",{"_index":291,"title":{},"body":{"controllers/PedidosController.html":{}}}],["this.prismarepository.cliente.create({data",{"_index":156,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["this.prismarepository.cliente.findmany",{"_index":158,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["this.prismarepository.cliente.findunique({where",{"_index":157,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["this.prismarepository.pedido.create({data",{"_index":341,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["this.prismarepository.pedido.findmany",{"_index":349,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["this.prismarepository.pedidoitems.create({data",{"_index":345,"title":{},"body":{"injectables/PeditosPostgres.html":{}}}],["this.prismarepository.produtos.create({data",{"_index":401,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["this.prismarepository.produtos.delete({where",{"_index":405,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["this.prismarepository.produtos.findmany",{"_index":407,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["this.prismarepository.produtos.update",{"_index":403,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["this.produtorepository.buscar(categoria",{"_index":456,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtorepository.cadastrar(novoproduto",{"_index":451,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtorepository.editar(id",{"_index":453,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtorepository.remover(id",{"_index":455,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtosservice.buscar(categoria",{"_index":430,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.cadastrar(nome",{"_index":423,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.editar(id,campo",{"_index":428,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.remover(id",{"_index":425,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["throw",{"_index":187,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/ProdutosController.html":{}}}],["tipocampo",{"_index":52,"title":{},"body":{"classes/AtualizarDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tipocategoria",{"_index":89,"title":{},"body":{"classes/CadastroDto-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tipostatus",{"_index":244,"title":{},"body":{"classes/CriarPedidoDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":559,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":78,"title":{},"body":{"classes/CadastroDto-1.html":{}}}],["twitter",{"_index":565,"title":{},"body":{"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"injectables/ClientePostgresRepository.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CriarPedidoDto.html":{},"interfaces/IClientesService.html":{},"interfaces/IPedidosService.html":{},"classes/Pedido.html":{},"controllers/PedidosController.html":{},"classes/PedidosItems.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{},"injectables/PrismaService.html":{},"classes/Produto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":580,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":520,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":45,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto-1.html":{},"classes/Cliente.html":{},"classes/CriarPedidoDto.html":{},"controllers/ProdutosController.html":{}}}],["unit",{"_index":536,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":579,"title":{},"body":{"properties.html":{}}}],["unnamed",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatedata",{"_index":402,"title":{},"body":{"injectables/ProdutoPostresRepository.html":{}}}],["useclass",{"_index":201,"title":{},"body":{"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{}}}],["valid",{"_index":230,"title":{},"body":{"injectables/ClientesService.html":{}}}],["validaclienteexistente",{"_index":136,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["validaclienteexistente(cpf",{"_index":148,"title":{},"body":{"injectables/ClientePostgresRepository.html":{}}}],["validacpf",{"_index":106,"title":{},"body":{"classes/Cliente.html":{}}}],["validacpf(cpf",{"_index":116,"title":{},"body":{"classes/Cliente.html":{}}}],["validator",{"_index":51,"title":{},"body":{"classes/AtualizarDto.html":{},"classes/CadastroDto.html":{},"classes/CadastroDto-1.html":{},"classes/CriarPedidoDto.html":{},"dependencies.html":{}}}],["valor",{"_index":39,"title":{},"body":{"classes/AtualizarDto.html":{},"injectables/ProdutoPostresRepository.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["value",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":585,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":577,"title":{},"body":{"properties.html":{}}}],["vus",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{}}}],["watch",{"_index":531,"title":{},"body":{"index.html":{}}}],["website",{"_index":563,"title":{},"body":{"index.html":{}}}],["yes",{"_index":271,"title":{},"body":{"classes/Pedido.html":{},"injectables/PedidosService.html":{},"injectables/PeditosPostgres.html":{}}}],["you'd",{"_index":552,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules/PedidosModule.html":{},"modules/ProdutosModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nClientesModule\n\nClientesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nClientesModule->AppModule\n\n\n\n\n\nPedidosModule\n\nPedidosModule\n\nAppModule -->\n\nPedidosModule->AppModule\n\n\n\n\n\nProdutosModule\n\nProdutosModule\n\nAppModule -->\n\nProdutosModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ClientesModule\n                        \n                        \n                            PedidosModule\n                        \n                        \n                            ProdutosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PedidosModule } from './pedidos/pedidos.module';\nimport { ClientesModule } from './clientes/clientes.module';\nimport { ProdutosModule } from './produtos/produtos.module';\n\n@Module({\n  imports: [PedidosModule, ClientesModule, ProdutosModule],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AtualizarDto.html":{"url":"classes/AtualizarDto.html","title":"class - AtualizarDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AtualizarDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/adapters/driving/dtos/atualizar.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                campo\n                            \n                            \n                                    \n                                valor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        campo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(EnumTipoCampo, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/atualizar.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        valor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/atualizar.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty } from 'class-validator';\n\nexport type TipoCampo = 'nome' | 'categoria' | 'preco' | 'descricao' | 'imagens';\n\nexport const EnumTipoCampo: TipoCampo[] = [\n  'nome' ,\n  'categoria',\n  'preco',\n  'descricao',\n  'imagens',\n]\n\nexport class AtualizarDto {\n  @IsNotEmpty()\n  @IsEnum(EnumTipoCampo,{\n    message: `campo must be one of: ${EnumTipoCampo.join(', ')}`,\n  })\n  campo: string;\n\n  @IsNotEmpty()\n  valor: string | string[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CadastroDto.html":{"url":"classes/CadastroDto.html","title":"class - CadastroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CadastroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/adapters/driving/dtos/cadastro.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cpf\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                nome\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clientes/adapters/driving/dtos/cadastro.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clientes/adapters/driving/dtos/cadastro.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/clientes/adapters/driving/dtos/cadastro.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CadastroDto {\n  @IsNotEmpty()\n  cpf: string;\n\n  @IsNotEmpty()\n  nome: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CadastroDto-1.html":{"url":"classes/CadastroDto-1.html","title":"class - CadastroDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CadastroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/adapters/driving/dtos/cadastro.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                categoria\n                            \n                            \n                                    \n                                descricao\n                            \n                            \n                                    \n                                    \n                                    \n                                imagens\n                            \n                            \n                                    \n                                nome\n                            \n                            \n                                    \n                                    \n                                preco\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        categoria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(EnumCategoriaTipo, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/cadastro.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/cadastro.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        imagens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ArrayMinSize(0)@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/cadastro.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/cadastro.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0.01)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/produtos/adapters/driving/dtos/cadastro.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsEnum, IsNotEmpty, IsNumber, IsString, Min } from 'class-validator';\n\nexport type TipoCategoria = 'Lanche' | 'Acompanhanmento' | 'Bebida' | 'Sobremesa';\n\nexport const EnumCategoriaTipo: TipoCategoria[] = [\n  'Lanche',\n  'Acompanhanmento',\n  'Bebida',\n  'Sobremesa',\n]\n\nexport class CadastroDto {\n  @IsNotEmpty()\n  nome: string;\n\n  @IsNotEmpty()\n  @IsEnum(EnumCategoriaTipo,{\n    message: `categoria must be one of: ${EnumCategoriaTipo.join(', ')}`,\n  })\n  categoria: string;\n\n  @IsNumber()\n  @Min(0.01)\n  preco: number;\n\n  @IsNotEmpty()\n  descricao: string;\n\n  @IsArray()\n  @ArrayMinSize(0)\n  @IsString({ each: true })\n  imagens: string[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cliente.html":{"url":"classes/Cliente.html","title":"class - Cliente","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cliente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/domain/entities/cliente.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                nome\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                criarCliente\n                            \n                            \n                                    Private\n                                    Static\n                                validaCpf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/clientes/domain/entities/cliente.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/clientes/domain/entities/cliente.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/clientes/domain/entities/cliente.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        criarCliente\n                        \n                    \n                \n            \n            \n                \n                        \n                    criarCliente(cpf: string, nome: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/domain/entities/cliente.entity.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nome\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Cliente\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        validaCpf\n                        \n                    \n                \n            \n            \n                \n                        \n                    validaCpf(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/domain/entities/cliente.entity.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Cliente {\n  cpf: string;\n  nome: string;\n  email: string;\n\n  private static validaCpf(cpf: string) {\n      let soma = 0;\n      if (cpf === undefined) {\n        return false;\n      }\n\n      const allOneNumber = /^(.)\\1*$/.test(cpf)\n      if(allOneNumber || cpf.length !== 11) return false;\n\n      for (let i = 1; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientePostgresRepository.html":{"url":"injectables/ClientePostgresRepository.html","title":"injectable - ClientePostgresRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientePostgresRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/adapters/driven/cliente-postgres.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cadastrarCliente\n                            \n                            \n                                    Async\n                                pegaClientePorCpf\n                            \n                            \n                                    Async\n                                validaClienteExistente\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaRepository: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/clientes/adapters/driven/cliente-postgres.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaRepository\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cadastrarCliente\n                        \n                    \n                \n            \n            \n                \n                        \n                    cadastrarCliente(novoCliente: Cliente)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/adapters/driven/cliente-postgres.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                novoCliente\n                                            \n                                                            Cliente\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pegaClientePorCpf\n                        \n                    \n                \n            \n            \n                \n                        \n                    pegaClientePorCpf(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/adapters/driven/cliente-postgres.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validaClienteExistente\n                        \n                    \n                \n            \n            \n                \n                        \n                    validaClienteExistente(cpf: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/adapters/driven/cliente-postgres.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cliente } from 'src/clientes/domain/entities/cliente.entity';\nimport { IClienteRepository } from 'src/clientes/domain/outboundPorts/Icliente.repository';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class ClientePostgresRepository implements IClienteRepository {\n\n  constructor(\n    private prismaRepository: PrismaService\n  ){}\n\n  async cadastrarCliente(novoCliente: Cliente): Promise {\n    const cliente = await this.prismaRepository.cliente.create({data: novoCliente});\n    return cliente;\n  }\n\n  async pegaClientePorCpf(cpf: string): Promise {\n    const cliente = await this.prismaRepository.cliente.findUnique({where: { cpf }});\n    return cliente;\n  }\n\n  async validaClienteExistente(cpf: string, email: string): Promise {\n    const cliente = await this.prismaRepository.cliente.findMany({\n      where: {\n        OR: [ \n          {cpf}, \n          {email}\n        ] \n      }\n    });\n    return cliente;\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientesController.html":{"url":"controllers/ClientesController.html","title":"controller - ClientesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/adapters/driving/cliente.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                clientes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                identificar\n                            \n                            \n                                    \n                                    Async\n                                registrar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        identificar\n                        \n                    \n                \n            \n            \n                \n                        \n                    identificar(cpf: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':cpf')\n                \n            \n\n                    \n                        \n                            Defined in src/clientes/adapters/driving/cliente.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        registrar\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrar(undefined: CadastroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/clientes/adapters/driving/cliente.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CadastroDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpException, HttpStatus, Param, Post } from '@nestjs/common';\nimport { Cliente } from '@prisma/client';\nimport { ClientesService } from 'src/clientes/domain/inboundPorts/cliente.service';\nimport { CadastroDto } from './dtos/cadastro.dto';\n\n@Controller('clientes')\nexport class ClientesController {\n  constructor(private clientesService: ClientesService) {}\n\n  @Post()\n  async registrar(@Body() {cpf, nome, email}: CadastroDto ): Promise {\n    const cliente = await this.clientesService.cadastrarCliente(cpf, nome, email);\n    return cliente;\n  }\n\n  @Get(':cpf')\n  async identificar(@Param('cpf') cpf: string): Promise {\n    const cliente =  await this.clientesService.identificarCliente(cpf);\n    if(!cliente) {\n      throw new HttpException('Not Found', HttpStatus.NOT_FOUND);\n    }\n    return cliente;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientesModule.html":{"url":"modules/ClientesModule.html","title":"module - ClientesModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientesModule\n\n\n\ncluster_ClientesModule_providers\n\n\n\n\nClientesService\n\nClientesService\n\n\n\nClientesModule\n\nClientesModule\n\nClientesModule -->\n\nClientesService->ClientesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nClientesModule -->\n\nPrismaService->ClientesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/clientes/clientes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ClientePostgresRepository } from './adapters/driven/cliente-postgres.repository';\nimport { ClientesController } from './adapters/driving/cliente.controller';\nimport { ClientesService } from './domain/inboundPorts/cliente.service';\nimport { IClienteRepository } from './domain/outboundPorts/Icliente.repository';\n\n@Module({\n  controllers: [ClientesController],\n  imports: [],\n  providers: [\n    PrismaService,\n    ClientesService,\n    {\n      provide: IClienteRepository,\n      useClass: ClientePostgresRepository,\n    },\n  ],\n})\nexport class ClientesModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientesService.html":{"url":"injectables/ClientesService.html","title":"injectable - ClientesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/domain/inboundPorts/cliente.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cadastrarCliente\n                            \n                            \n                                    Async\n                                identificarCliente\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clienteRepository: IClienteRepository)\n                    \n                \n                        \n                            \n                                Defined in src/clientes/domain/inboundPorts/cliente.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clienteRepository\n                                                  \n                                                        \n                                                                        IClienteRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cadastrarCliente\n                        \n                    \n                \n            \n            \n                \n                        \n                    cadastrarCliente(cpf: string, nome: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/domain/inboundPorts/cliente.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nome\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        identificarCliente\n                        \n                    \n                \n            \n            \n                \n                        \n                    identificarCliente(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/domain/inboundPorts/cliente.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { Cliente } from '../entities/cliente.entity';\nimport { IClientesService } from './Icliente.service';\nimport { IClienteRepository } from '../outboundPorts/Icliente.repository';\n\n@Injectable()\nexport class ClientesService implements IClientesService {\n  constructor(\n    @Inject(IClienteRepository)\n    private clienteRepository: IClienteRepository\n  ){}\n\n  async cadastrarCliente(cpf: string, nome: string, email: string): Promise {\n\n    const cpfOnlyNumbers = cpf.replace(/[^0-9]/g, '');\n\n    const exists = await this.clienteRepository.validaClienteExistente(cpfOnlyNumbers, email);\n    if(exists.length) {\n      throw new HttpException('Email or CPF already registered', HttpStatus.BAD_REQUEST);\n    }\n\n    const novoCliente = Cliente.criarCliente(cpfOnlyNumbers, nome, email);\n    if(!novoCliente) {\n      throw new HttpException('Cpf or email not valid', HttpStatus.BAD_REQUEST);\n    }\n\n    const clienteCadastrado = await this.clienteRepository.cadastrarCliente(novoCliente);\n    return clienteCadastrado;\n  }\n\n  async identificarCliente(cpf: string): Promise {\n    return await this.clienteRepository.pegaClientePorCpf(cpf);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CriarPedidoDto.html":{"url":"classes/CriarPedidoDto.html","title":"class - CriarPedidoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CriarPedidoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                clienteCpf\n                            \n                            \n                                    \n                                produtosIds\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clienteCpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        produtosIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(EnumStatusTipo, {message: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsNotEmpty } from 'class-validator';\n\nexport type TipoStatus = 'recebido' | 'em-preparacao' | 'pronto' | 'finalizado';\n\nexport const EnumStatusTipo: TipoStatus[] = [\n  'recebido',\n  'em-preparacao',\n  'pronto',\n  'finalizado',\n]\n\nexport class CriarPedidoDto {\n  @IsNotEmpty()\n  produtosIds: string[];\n\n  @IsNotEmpty()\n  @IsEnum(EnumStatusTipo,{\n    message: `status must be one of: ${EnumStatusTipo.join(', ')}`,\n  })\n  status: string;\n\n  @IsNotEmpty()\n  clienteCpf: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IClientesService.html":{"url":"interfaces/IClientesService.html","title":"interface - IClientesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IClientesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/domain/inboundPorts/Icliente.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        cadastrarCliente\n                                    \n                                \n                                \n                                    \n                                        identificarCliente\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cadastrarCliente\n                        \n                    \n                \n            \n            \n                \ncadastrarCliente(cpf: string, nome: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/domain/inboundPorts/Icliente.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                nome\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        identificarCliente\n                        \n                    \n                \n            \n            \n                \nidentificarCliente(cpf: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/clientes/domain/inboundPorts/Icliente.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Cliente } from \"../entities/cliente.entity\";\n\nexport interface IClientesService {\n  cadastrarCliente(cpf: string, nome: string, email: string): Promise;\n  identificarCliente(cpf: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPedidosService.html":{"url":"interfaces/IPedidosService.html","title":"interface - IPedidosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPedidosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/domain/inboundPorts/Ipedidos.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            criar\n                                        \n                                \n                                \n                                        \n                                            listar\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        criar:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listar:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Pedido } from \"../entities/pedido.entity\";\n\nexport interface IPedidosService {\n  criar: (produtosIds: string[], status: string, clienteCpf?: string) => Promise;\n  listar: () => Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pedido.html":{"url":"classes/Pedido.html","title":"class - Pedido","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pedido\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/domain/entities/pedido.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                clienteCpf\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                criaPedido\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        clienteCpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/pedidos/domain/entities/pedido.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/pedidos/domain/entities/pedido.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        criaPedido\n                        \n                    \n                \n            \n            \n                \n                        \n                    criaPedido(status: string, clienteCpf?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pedidos/domain/entities/pedido.entity.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                clienteCpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Pedido\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Pedido {\n  status: string;\n  clienteCpf?: string;\n\n  static criaPedido(status: string, clienteCpf?: string): Pedido {\n    const novoPedido = new Pedido();\n    novoPedido.status = status;\n    if(clienteCpf) novoPedido.clienteCpf = clienteCpf;\n\n    return novoPedido;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PedidosController.html":{"url":"controllers/PedidosController.html","title":"controller - PedidosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PedidosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/adapters/driving/pedidos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pedidos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                cadastrar\n                            \n                            \n                                    \n                                    Async\n                                listar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        cadastrar\n                        \n                    \n                \n            \n            \n                \n                        \n                    cadastrar(undefined: CriarPedidoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/pedidos/adapters/driving/pedidos.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CriarPedidoDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        listar\n                        \n                    \n                \n            \n            \n                \n                        \n                    listar()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/pedidos/adapters/driving/pedidos.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { PedidosService } from 'src/pedidos/domain/inboundPorts/pedidos.service';\nimport { CriarPedidoDto } from './dtos/criar-pedido.dto';\nimport { Pedido } from 'src/pedidos/domain/entities/pedido.entity';\n\n@Controller('pedidos')\nexport class PedidosController {\n  constructor(private pedidosService: PedidosService) {}\n\n  @Post()\n  async cadastrar(@Body() { produtosIds, status, clienteCpf }: CriarPedidoDto): Promise {\n    const pedido = await this.pedidosService.criar(produtosIds, status, clienteCpf);\n    return pedido\n  }\n\n  @Get()\n  async listar(): Promise {\n    const pedidos = await this.pedidosService.listar();\n    return pedidos;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PedidosItems.html":{"url":"classes/PedidosItems.html","title":"class - PedidosItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PedidosItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/domain/entities/pedidos-items.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pedidoId\n                            \n                            \n                                produtoId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                criaPedidosItens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pedidoId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/pedidos/domain/entities/pedidos-items.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        produtoId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/pedidos/domain/entities/pedidos-items.entity.ts:2\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        criaPedidosItens\n                        \n                    \n                \n            \n            \n                \n                        \n                    criaPedidosItens(produtoId: string, pedidoId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pedidos/domain/entities/pedidos-items.entity.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                produtoId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pedidoId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PedidosItems\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class PedidosItems {\n  produtoId: string;\n  pedidoId: string;\n\n  static criaPedidosItens(\n    produtoId: string,\n    pedidoId: string,\n  ): PedidosItems {\n    const novoPedidoItem = new PedidosItems();\n    novoPedidoItem.produtoId = produtoId;\n    novoPedidoItem.pedidoId = pedidoId;\n\n    return novoPedidoItem;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PedidosModule.html":{"url":"modules/PedidosModule.html","title":"module - PedidosModule","body":"\n                   \n\n\n\n\n    Modules\n    PedidosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PedidosModule\n\n\n\ncluster_PedidosModule_providers\n\n\n\n\nPedidosService\n\nPedidosService\n\n\n\nPedidosModule\n\nPedidosModule\n\nPedidosModule -->\n\nPedidosService->PedidosModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPedidosModule -->\n\nPrismaService->PedidosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pedidos/pedidos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PedidosService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PedidosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PedidosController } from './adapters/driving/pedidos.controller';\nimport { IPedidosRepository } from './domain/outboundPorts/Ipedido.repository';\nimport { PeditosPostgres } from './adapters/driven/pedido-posgres.repository';\nimport { PedidosService } from './domain/inboundPorts/pedidos.service';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  controllers: [PedidosController],\n  providers: [\n    PrismaService,\n    PedidosService,\n    {\n      provide: IPedidosRepository,\n      useClass: PeditosPostgres,\n    },\n  ],\n})\nexport class PedidosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PedidosService.html":{"url":"injectables/PedidosService.html","title":"injectable - PedidosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PedidosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/domain/inboundPorts/pedidos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                criar\n                            \n                            \n                                    Async\n                                listar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pedidoRepository: IPedidosRepository)\n                    \n                \n                        \n                            \n                                Defined in src/pedidos/domain/inboundPorts/pedidos.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pedidoRepository\n                                                  \n                                                        \n                                                                        IPedidosRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        criar\n                        \n                    \n                \n            \n            \n                \n                        \n                    criar(produtosIds: string[], status: string, clienteCpf?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pedidos/domain/inboundPorts/pedidos.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                produtosIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                clienteCpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listar\n                        \n                    \n                \n            \n            \n                \n                        \n                    listar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/pedidos/domain/inboundPorts/pedidos.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport { Pedido } from \"../entities/pedido.entity\";\nimport { IPedidosService } from \"./Ipedidos.service\";\nimport { IPedidosRepository } from \"../outboundPorts/Ipedido.repository\";\n\n@Injectable()\nexport class PedidosService implements IPedidosService {\n  constructor(\n    @Inject(IPedidosRepository)\n    private pedidoRepository: IPedidosRepository\n  ){}\n\n  async criar(produtosIds: string[], status: string, clienteCpf?: string): Promise {\n    const pedido = await this.pedidoRepository.criar(produtosIds, status, clienteCpf);\n    return pedido;\n  }\n\n  async listar(): Promise {\n    const pedidos = await this.pedidoRepository.listar();\n    return pedidos;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PeditosPostgres.html":{"url":"injectables/PeditosPostgres.html","title":"injectable - PeditosPostgres","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PeditosPostgres\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pedidos/adapters/driven/pedido-posgres.repository.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the implementation of output port, to store things in memory.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                criar\n                            \n                            \n                                    Async\n                                listar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaRepository: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/pedidos/adapters/driven/pedido-posgres.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaRepository\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        criar\n                        \n                    \n                \n            \n            \n                \n                        \n                    criar(produtosIds: string[], status: string, clienteCpf?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pedidos/adapters/driven/pedido-posgres.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                produtosIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                clienteCpf\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listar\n                        \n                    \n                \n            \n            \n                \n                        \n                    listar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/pedidos/adapters/driven/pedido-posgres.repository.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Pedido } from 'src/pedidos/domain/entities/pedido.entity';\nimport { IPedidosRepository } from 'src/pedidos/domain/outboundPorts/Ipedido.repository';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n/**\n * This is the implementation of output port, to store things in memory.\n */\n@Injectable()\nexport class PeditosPostgres implements IPedidosRepository {\n\n  constructor(\n    private prismaRepository: PrismaService\n  ){}\n\n  async criar(produtosIds: string[], status: string, clienteCpf?: string): Promise {\n\n    const cpf = clienteCpf ? clienteCpf : null;\n\n    const pedido = await this.prismaRepository.pedido.create({data: { status, clienteId: cpf }});\n\n    const pedidosItensPromise = produtosIds.map(pid => this.prismaRepository.pedidoItems.create({data: { pedidoId: pedido.id, produtoId: pid }}));\n\n    Promise.all(pedidosItensPromise);\n\n    return pedido;\n  }\n\n  async listar(): Promise {\n    const pedidos =  await this.prismaRepository.pedido.findMany();\n    return pedidos;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleDestroy\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \nonModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PrismaClient\n\n                    \n                \n                    \n                        \n                                Defined in src/prisma/prisma.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService\n  extends PrismaClient\n  implements OnModuleInit, OnModuleDestroy\n{\n  public client: PrismaClient;\n\n  constructor() {\n    super({\n      log: ['warn', 'error'],\n    });\n  }\n\n  onModuleInit() {\n    return this.$connect();\n  }\n\n  onModuleDestroy() {\n    return this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Produto.html":{"url":"classes/Produto.html","title":"class - Produto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Produto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/domain/entities/produto.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoria\n                            \n                            \n                                descricao\n                            \n                            \n                                imagens\n                            \n                            \n                                nome\n                            \n                            \n                                preco\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                criarProduto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoria\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/produtos/domain/entities/produto.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/produtos/domain/entities/produto.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imagens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/produtos/domain/entities/produto.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/produtos/domain/entities/produto.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/produtos/domain/entities/produto.entity.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        criarProduto\n                        \n                    \n                \n            \n            \n                \n                        \n                    criarProduto(nome: string, categoria: string, preco: number, descricao: string, imagens: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/domain/entities/produto.entity.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nome\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preco\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                descricao\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                imagens\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Produto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Produto {\n  nome: string\n  categoria:  string\n  preco: number\n  descricao: string\n  imagens: string[]\n\n  static criarProduto(nome: string, categoria: string, preco: number, descricao: string, imagens: string[]): Produto {\n    const novoProduto = new Produto();\n    novoProduto.nome = nome;\n    novoProduto.categoria = categoria;\n    novoProduto.preco = preco;\n    novoProduto.descricao = descricao;\n    novoProduto.imagens = imagens;\n\n    return novoProduto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutoPostresRepository.html":{"url":"injectables/ProdutoPostresRepository.html","title":"injectable - ProdutoPostresRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProdutoPostresRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/adapters/driven/produto-postgres.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buscar\n                            \n                            \n                                    Async\n                                cadastrar\n                            \n                            \n                                    Async\n                                editar\n                            \n                            \n                                    Async\n                                remover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaRepository: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/produtos/adapters/driven/produto-postgres.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaRepository\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buscar\n                        \n                    \n                \n            \n            \n                \n                        \n                    buscar(categoria: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/adapters/driven/produto-postgres.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cadastrar\n                        \n                    \n                \n            \n            \n                \n                        \n                    cadastrar(novoProduto: Produto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/adapters/driven/produto-postgres.repository.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                novoProduto\n                                            \n                                                            Produto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: string, campo: string, valor: string | number | string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/adapters/driven/produto-postgres.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                campo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                valor\n                                            \n                                                        string | number | string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remover\n                        \n                    \n                \n            \n            \n                \n                        \n                    remover(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/adapters/driven/produto-postgres.repository.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cliente } from 'src/clientes/domain/entities/cliente.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Produto } from 'src/produtos/domain/entities/produto.entity';\nimport { IProdutoRepository } from 'src/produtos/domain/outboundPorts/Iproduto.repository';\n\n@Injectable()\nexport class ProdutoPostresRepository implements IProdutoRepository {\n\n  constructor(\n    private prismaRepository: PrismaService\n  ){}\n\n  async cadastrar(novoProduto: Produto): Promise {\n    const produtoCriado = await this.prismaRepository.produtos.create({data: novoProduto});\n    return produtoCriado;\n  }\n\n  async editar(id: string, campo: string, valor: string | number | string[]): Promise {\n    const updateData = { [campo]: valor };\n    const produtoCriado = await this.prismaRepository.produtos.update({\n      where: {\n        id,\n      },\n      data:  updateData\n    });\n    return produtoCriado;\n  }\n\n  async remover(id: string): Promise {\n    const produtoCriado = await this.prismaRepository.produtos.delete({where: {\n        id,\n      },\n    });\n    return produtoCriado;\n  }\n\n  async buscar(categoria: string): Promise {\n    const produtos = await this.prismaRepository.produtos.findMany({ where: { categoria } });\n    return produtos;\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProdutosController.html":{"url":"controllers/ProdutosController.html","title":"controller - ProdutosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProdutosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/adapters/driving/pedito.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                produtos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                buscar\n                            \n                            \n                                    \n                                    Async\n                                cadastrar\n                            \n                            \n                                    \n                                    Async\n                                editar\n                            \n                            \n                                    \n                                    Async\n                                remover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        buscar\n                        \n                    \n                \n            \n            \n                \n                        \n                    buscar(categoria: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':categoria')\n                \n            \n\n                    \n                        \n                            Defined in src/produtos/adapters/driving/pedito.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        cadastrar\n                        \n                    \n                \n            \n            \n                \n                        \n                    cadastrar(undefined: CadastroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/produtos/adapters/driving/pedito.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            CadastroDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: string, undefined: AtualizarDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/produtos/adapters/driving/pedito.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            AtualizarDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remover\n                        \n                    \n                \n            \n            \n                \n                        \n                    remover(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/produtos/adapters/driving/pedito.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpException, HttpStatus, Param, Post, Put } from '@nestjs/common';\nimport { Produto } from 'src/produtos/domain/entities/produto.entity';\nimport { ProdutosService } from 'src/produtos/domain/inboundPorts/produto.service';\nimport { CadastroDto } from './dtos/cadastro.dto';\nimport { AtualizarDto } from './dtos/atualizar.dto';\n\n@Controller('produtos')\nexport class ProdutosController {\n  constructor(private produtosService: ProdutosService) {}\n\n  @Post()\n  async cadastrar(@Body() {nome, categoria, preco, descricao, imagens }: CadastroDto ): Promise {\n    const produto = await this.produtosService.cadastrar(nome, categoria, preco, descricao, imagens);\n    return produto;\n  }\n\n  @Delete(':id')\n  async remover(@Param('id') id: string): Promise {\n    const produto =  await this.produtosService.remover(id);\n    if(!produto) {\n      throw new HttpException('Not Found', HttpStatus.NOT_FOUND);\n    }\n    return produto;\n  }\n\n  @Put(':id')\n  async editar(@Param('id') id: string, @Body() { campo, valor }: AtualizarDto): Promise {\n    const produto =  await this.produtosService.editar(id,campo, valor);\n    if(!produto) {\n      throw new HttpException('Not Found', HttpStatus.NOT_FOUND);\n    }\n    return produto;\n  }\n\n  @Get(':categoria')\n  async buscar(@Param('categoria') categoria: string): Promise {\n    const produtos =  await this.produtosService.buscar(categoria);\n    return produtos;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProdutosModule.html":{"url":"modules/ProdutosModule.html","title":"module - ProdutosModule","body":"\n                   \n\n\n\n\n    Modules\n    ProdutosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProdutosModule\n\n\n\ncluster_ProdutosModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nProdutosModule\n\nProdutosModule\n\nProdutosModule -->\n\nPrismaService->ProdutosModule\n\n\n\n\n\nProdutosService\n\nProdutosService\n\nProdutosModule -->\n\nProdutosService->ProdutosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/produtos/produtos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ProdutosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProdutosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ProdutoPostresRepository } from 'src/produtos/adapters/driven/produto-postgres.repository';\nimport { ProdutosController } from 'src/produtos/adapters/driving/pedito.controller';\nimport { ProdutosService } from 'src/produtos/domain/inboundPorts/produto.service';\nimport { IProdutoRepository } from 'src/produtos/domain/outboundPorts/Iproduto.repository';\n\n@Module({\n  controllers: [ProdutosController],\n  imports: [],\n  providers: [\n    PrismaService,\n    ProdutosService,\n    {\n      provide: IProdutoRepository,\n      useClass: ProdutoPostresRepository,\n    },\n  ],\n})\nexport class ProdutosModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutosService.html":{"url":"injectables/ProdutosService.html","title":"injectable - ProdutosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProdutosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/domain/inboundPorts/produto.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                buscar\n                            \n                            \n                                    Async\n                                cadastrar\n                            \n                            \n                                    Async\n                                editar\n                            \n                            \n                                    Async\n                                remover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(produtoRepository: IProdutoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/produtos/domain/inboundPorts/produto.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        produtoRepository\n                                                  \n                                                        \n                                                                        IProdutoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        buscar\n                        \n                    \n                \n            \n            \n                \n                        \n                    buscar(categoria: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/domain/inboundPorts/produto.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cadastrar\n                        \n                    \n                \n            \n            \n                \n                        \n                    cadastrar(nome: string, categoria: string, preco: number, descricao: string, imagens: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/domain/inboundPorts/produto.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nome\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                categoria\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preco\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                descricao\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                imagens\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editar\n                        \n                    \n                \n            \n            \n                \n                        \n                    editar(id: string, campo: string, valor: string | number | string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/domain/inboundPorts/produto.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                campo\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                valor\n                                            \n                                                        string | number | string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remover\n                        \n                    \n                \n            \n            \n                \n                        \n                    remover(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/produtos/domain/inboundPorts/produto.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Produto } from '../entities/produto.entity';\nimport { IProdutoRepository } from '../outboundPorts/Iproduto.repository';\nimport { IProdutosService } from './Iproduto.service';\n\n@Injectable()\nexport class ProdutosService implements IProdutosService {\n  constructor(\n    @Inject(IProdutoRepository)\n    private produtoRepository: IProdutoRepository\n  ){}\n\n  async cadastrar(nome: string, categoria: string, preco: number, descricao: string, imagens: string[]): Promise {\n    const novoProduto = Produto.criarProduto(nome, categoria, preco, descricao, imagens);\n    const produtoCadastrado = await this.produtoRepository.cadastrar(novoProduto);\n    return produtoCadastrado;\n  }\n  \n  async editar(id: string, campo: string, valor: string | number | string[]): Promise {\n    const produtoAtt = await this.produtoRepository.editar(id, campo, valor)\n    return produtoAtt;\n  }\n  async remover(id: string): Promise {\n    const produtoRemovido = await this.produtoRepository.remover(id);\n    return produtoRemovido;\n  }\n  async buscar(categoria: string): Promise {\n    const produtos = await this.produtoRepository.buscar(categoria);\n    return produtos;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/clientes/adapters/driven/cliente-postgres.repository.ts\n            \n            injectable\n            ClientePostgresRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/clientes/adapters/driving/cliente.controller.ts\n            \n            controller\n            ClientesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/clientes/adapters/driving/dtos/cadastro.dto.ts\n            \n            class\n            CadastroDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/clientes/domain/entities/cliente.entity.ts\n            \n            class\n            Cliente\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/clientes/domain/inboundPorts/Icliente.service.ts\n            \n            interface\n            IClientesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/clientes/domain/inboundPorts/cliente.service.ts\n            \n            injectable\n            ClientesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/clientes/domain/outboundPorts/Icliente.repository.ts\n            \n            variable\n            IClienteRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pedidos/adapters/driven/pedido-posgres.repository.ts\n            \n            injectable\n            PeditosPostgres\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts\n            \n            class\n            CriarPedidoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts\n            \n            variable\n            EnumStatusTipo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pedidos/adapters/driving/pedidos.controller.ts\n            \n            controller\n            PedidosController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pedidos/domain/entities/pedido.entity.ts\n            \n            class\n            Pedido\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pedidos/domain/entities/pedidos-items.entity.ts\n            \n            class\n            PedidosItems\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pedidos/domain/inboundPorts/Ipedidos.service.ts\n            \n            interface\n            IPedidosService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pedidos/domain/inboundPorts/pedidos.service.ts\n            \n            injectable\n            PedidosService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pedidos/domain/outboundPorts/Ipedido.repository.ts\n            \n            variable\n            IPedidosRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/produtos/adapters/driven/produto-postgres.repository.ts\n            \n            injectable\n            ProdutoPostresRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/produtos/adapters/driving/dtos/atualizar.dto.ts\n            \n            class\n            AtualizarDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/produtos/adapters/driving/dtos/atualizar.dto.ts\n            \n            variable\n            EnumTipoCampo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtos/adapters/driving/dtos/cadastro.dto.ts\n            \n            class\n            CadastroDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/produtos/adapters/driving/dtos/cadastro.dto.ts\n            \n            variable\n            EnumCategoriaTipo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtos/adapters/driving/pedito.controller.ts\n            \n            controller\n            ProdutosController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/produtos/domain/entities/produto.entity.ts\n            \n            class\n            Produto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/produtos/domain/inboundPorts/Iproduto.service.ts\n            \n            variable\n            IProdutosService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtos/domain/inboundPorts/produto.service.ts\n            \n            injectable\n            ProdutosService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/produtos/domain/outboundPorts/Iproduto.repository.ts\n            \n            variable\n            IProdutoRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/stress/stress-k6.ts\n            \n            function\n            Unnamed function\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/stress/stress-k6.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @prisma/client : ^5.4.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            k6 : ^0.0.0\n        \n            mysql : ^2.18.1\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            Unnamed function   (test/.../stress-k6.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    test/stress/stress-k6.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Unnamed function\n                        \n                    \n                \n            \n            \n                \nUnnamed function()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PedidosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProdutosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ClientesModule\n\n\n\ncluster_ClientesModule_providers\n\n\n\ncluster_PedidosModule\n\n\n\ncluster_PedidosModule_providers\n\n\n\ncluster_ProdutosModule\n\n\n\ncluster_ProdutosModule_providers\n\n\n\n\nClientesModule\n\nClientesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nClientesModule->AppModule\n\n\n\n\n\nPedidosModule\n\nPedidosModule\n\nAppModule -->\n\nPedidosModule->AppModule\n\n\n\n\n\nProdutosModule\n\nProdutosModule\n\nAppModule -->\n\nProdutosModule->AppModule\n\n\n\n\n\nClientesService\n\nClientesService\n\nClientesModule -->\n\nClientesService->ClientesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nClientesModule -->\n\nPrismaService->ClientesModule\n\n\n\nPedidosModule -->\n\nPrismaService->PedidosModule\n\n\n\nProdutosModule -->\n\nPrismaService->ProdutosModule\n\n\n\n\n\nPedidosService\n\nPedidosService\n\nPedidosModule -->\n\nPedidosService->PedidosModule\n\n\n\n\n\nProdutosService\n\nProdutosService\n\nProdutosModule -->\n\nProdutosService->ProdutosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TipoCampo   (src/.../atualizar.dto.ts)\n                        \n                        \n                            TipoCategoria   (src/.../cadastro.dto.ts)\n                        \n                        \n                            TipoStatus   (src/.../criar-pedido.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/produtos/adapters/driving/dtos/atualizar.dto.ts\n    \n    \n        \n            \n                \n                    \n                    TipoCampo\n                \n            \n            \n                \n                        \"nome\" | \"categoria\" | \"preco\" | \"descricao\" | \"imagens\"\n\n                \n            \n        \n    \n    src/produtos/adapters/driving/dtos/cadastro.dto.ts\n    \n    \n        \n            \n                \n                    \n                    TipoCategoria\n                \n            \n            \n                \n                        \"Lanche\" | \"Acompanhanmento\" | \"Bebida\" | \"Sobremesa\"\n\n                \n            \n        \n    \n    src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts\n    \n    \n        \n            \n                \n                    \n                    TipoStatus\n                \n            \n            \n                \n                        \"recebido\" | \"em-preparacao\" | \"pronto\" | \"finalizado\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumCategoriaTipo   (src/.../cadastro.dto.ts)\n                        \n                        \n                            EnumStatusTipo   (src/.../criar-pedido.dto.ts)\n                        \n                        \n                            EnumTipoCampo   (src/.../atualizar.dto.ts)\n                        \n                        \n                            IClienteRepository   (src/.../Icliente.repository.ts)\n                        \n                        \n                            IPedidosRepository   (src/.../Ipedido.repository.ts)\n                        \n                        \n                            IProdutoRepository   (src/.../Iproduto.repository.ts)\n                        \n                        \n                            IProdutosService   (src/.../Iproduto.service.ts)\n                        \n                        \n                            options   (test/.../stress-k6.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/produtos/adapters/driving/dtos/cadastro.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnumCategoriaTipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TipoCategoria[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  'Lanche',\n  'Acompanhanmento',\n  'Bebida',\n  'Sobremesa',\n]\n                    \n                \n\n\n        \n    \n\n    src/pedidos/adapters/driving/dtos/criar-pedido.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnumStatusTipo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TipoStatus[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  'recebido',\n  'em-preparacao',\n  'pronto',\n  'finalizado',\n]\n                    \n                \n\n\n        \n    \n\n    src/produtos/adapters/driving/dtos/atualizar.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnumTipoCampo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TipoCampo[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  'nome' ,\n  'categoria',\n  'preco',\n  'descricao',\n  'imagens',\n]\n                    \n                \n\n\n        \n    \n\n    src/clientes/domain/outboundPorts/Icliente.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IClienteRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IClienteRepository')\n                    \n                \n\n\n        \n    \n\n    src/pedidos/domain/outboundPorts/Ipedido.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IPedidosRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IPedidosRepository')\n                    \n                \n\n\n        \n    \n\n    src/produtos/domain/outboundPorts/Iproduto.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IProdutoRepository\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IProdutoRepository')\n                    \n                \n\n\n        \n    \n\n    src/produtos/domain/inboundPorts/Iproduto.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IProdutosService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('IProdutosService')\n                    \n                \n\n\n        \n    \n\n    test/stress/stress-k6.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  vus: 10,\n  duration: '30s',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
